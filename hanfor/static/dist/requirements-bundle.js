/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./js/requirements.js":
/*!****************************!*\
  !*** ./js/requirements.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("/* provided dependency */ var $ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n__webpack_require__(/*! gasparesganga-jquery-loading-overlay */ \"./node_modules/gasparesganga-jquery-loading-overlay/src/loadingoverlay.js\");\nconst {Collapse, Modal} = __webpack_require__(/*! bootstrap */ \"./node_modules/bootstrap/dist/js/bootstrap.esm.js\");\n__webpack_require__(/*! datatables.net-bs5 */ \"./node_modules/datatables.net-bs5/js/dataTables.bootstrap5.mjs\");\n__webpack_require__(/*! datatables.net-select-bs5 */ \"./node_modules/datatables.net-select-bs5/js/select.bootstrap5.mjs\");\n__webpack_require__(/*! jquery-ui/ui/widgets/autocomplete */ \"./node_modules/jquery-ui/ui/widgets/autocomplete.js\");\n__webpack_require__(/*! jquery-ui/ui/effects/effect-highlight */ \"./node_modules/jquery-ui/ui/effects/effect-highlight.js\");\n__webpack_require__(/*! ./bootstrap-tokenfield.js */ \"./js/bootstrap-tokenfield.js\");\n__webpack_require__(/*! awesomplete */ \"./node_modules/awesomplete/awesomplete.js\");\n__webpack_require__(/*! awesomplete/awesomplete.css */ \"./node_modules/awesomplete/awesomplete.css\");\n//require('datatables.net-bs5-colreorderwithresize-npm');\n__webpack_require__(/*! datatables.net-colreorder-bs5 */ \"./node_modules/datatables.net-colreorder-bs5/js/colReorder.bootstrap5.mjs\");\n__webpack_require__(/*! ./bootstrap-confirm-button */ \"./js/bootstrap-confirm-button.js\");\n\nlet utils = __webpack_require__(/*! ./hanfor-utils */ \"./js/hanfor-utils.js\");\nconst autosize = __webpack_require__(/*! autosize/dist/autosize */ \"./node_modules/autosize/dist/autosize.js\");\n\n// Globals\nconst {SearchNode} = __webpack_require__(/*! ./datatables-advanced-search.js */ \"./js/datatables-advanced-search.js\");\nconst {init_simulator_tab} = __webpack_require__(/*! ./simulator-tab.js */ \"./js/simulator-tab.js\");\nconst {init_bpmn_tab} = __webpack_require__(/*! ./bpmn-tab.js */ \"./js/bpmn-tab.js\");\nconst {init_ultimate_tab} = __webpack_require__(/*! ../../ultimate/static/ultimate-tab.js */ \"../ultimate/static/ultimate-tab.js\");\nconst {init_ultimate_requirements_table_connection} = __webpack_require__(/*! ../../ultimate/static/ultimate-tab.js */ \"../ultimate/static/ultimate-tab.js\");\n\nconst {Textcomplete} = __webpack_require__(/*! @textcomplete/core */ \"./node_modules/@textcomplete/core/dist/index.js\")\nconst {TextareaEditor} = __webpack_require__(/*! @textcomplete/textarea */ \"./node_modules/@textcomplete/textarea/dist/index.js\")\n\n//const {Modal} = require(\"bootstrap\");\n\nlet Fuse = __webpack_require__(/*! fuse.js */ \"./node_modules/fuse.js/dist/fuse.js\");\nlet fuse = new Fuse([], {});\n\nlet available_tags = ['', 'has_formalization'];\nlet available_status = ['', 'Todo', 'Review', 'Done'];\nlet search_autocomplete = [\":AND:\", \":OR:\", \":NOT:\", \":COL_INDEX_01:\", \":COL_INDEX_02:\", \":COL_INDEX_03:\", \":COL_INDEX_04:\", \":COL_INDEX_05:\", \":COL_INDEX_06:\", \":COL_INDEX_07:\"];\nlet available_types = [''];\nlet available_vars = [''];\nlet available_reports = [];\nlet visible_columns = [true, true, true, true, true, true];\nlet filter_search_array = [];\nlet get_query = JSON.parse(search_query); // search_query is set in layout.html\nlet tag_colors = {};\nlet type_inference_errors = [];\nlet req_search_string = sessionStorage.getItem('req_search_string');\nlet filter_status_string = sessionStorage.getItem('filter_status_string');\nlet filter_tag_string = sessionStorage.getItem('filter_tag_string');\nlet filter_type_string = sessionStorage.getItem('filter_type_string');\nlet search_tree = undefined;\nlet filter_tree = undefined;\n\n\n/**\n * INDEX\n * =====================================================================================================================\n */\n$(document).ready(function () {\n    load_tags();\n    initialise_search_bar();\n    load_datatable();\n    init_modal();\n    update_logs();\n    init_report_generation();\n    init_simulator_tab();\n    console.log(\"load 1\");\n    init_bpmn_tab();\n    init_ultimate_tab();\n\n    let body = $('body');\n    // Bind formalization deletion.\n    // body.confirmation({\n    //     rootSelector: '.delete_formalization',\n    //     selector: '.delete_formalization',\n    //     onConfirm: function () {\n    //         delete_formalization($(this).attr('name'), $(this).closest('.card'));\n    //     }\n    // });\n\n    $('body').bootstrapConfirmButton({\n        selector: '.delete_formalization', onConfirm: function () {\n            delete_formalization($(this).attr('name'), $(this).closest('.accordion-item'))\n        }\n    })\n\n    body.on('click', '.delete_formalization1', function () {\n        bootstrapConfirmation({\n            yesCallBack: function () {\n                console.log('yes');\n            }, noCallBack: function () {\n                console.log('no');\n            }, config: {\n                closeIcon: true, message: 'This is an example.', title: 'Example', no: {\n                    class: 'btn btn-danger', text: 'No'\n                }, yes: {\n                    class: 'btn btn-success', text: 'Yes'\n                }\n            }\n        });\n    })\n\n    // Bind formalization update.\n    body.on('change', '.formalization_selector, .reqirement-variable, .req_var_type', function () {\n        update_formalization();\n    });\n    // Bind formalization variable update.\n    body.on('change', '.formalization_selector', function () {\n        update_vars();\n    });\n\n    /*\n    body.on('shown.bs.modal', '#requirement_modal', function () {\n        $(this).find('textarea').each(function () {\n            autosize($(this));\n            autosize.update($(this));\n        });\n    });\n    */\n\n    const requirement_modal = document.getElementById('requirement_modal')\n    requirement_modal.addEventListener('shown.bs.modal', function () {\n        $(this).find('textarea').each(function () {\n            autosize($(this));\n            autosize.update($(this));\n        });\n    })\n\n    body.on('change focus', 'textarea', function () {\n        autosize($(this));\n        autosize.update($(this));\n    });\n    bind_tag_field_events();\n});\n\n/**\n * Fetch requirements from hanfor api and build the requirements table.\n * Apply search queries to table\n * Bind button/links to events.\n * @param columnDefs predefined columDefs (https://datatables.net/reference/option/columnDefs)\n */\nfunction init_datatable(columnDefs) {\n    // debugger;\n    console.log('init_datatable' ,columnDefs);\n    let table = $('#requirements_table').DataTable({\n        \"language\": {\n            \"emptyTable\": \"Loading data.\"\n        },\n        \"paging\": true,\n        \"stateSave\": true,\n        \"select\": {\n            style: 'os', selector: 'td:first-child'\n        },\n        \"order\": [[1, \"asc\"]],\n        \"pageLength\": 50,\n        \"lengthMenu\": [[10, 50, 100, 500, -1], [10, 50, 100, 500, \"All\"]],\n        \"dom\": 'rt<\"container\"<\"row\"<\"col-md-6\"li><\"col-md-6\"p>>>',\n        \"ajax\": \"api/req/gets\",\n        \"deferRender\": true,\n        \"columnDefs\": columnDefs,\n        \"createdRow\": function (row, data) {\n            if (data['type'] === 'Heading') {\n                $(row).addClass('bg-primary');\n            }\n            if (data['type'] === 'Information') {\n                $(row).addClass('table-info');\n            }\n            if (data['type'] === 'Requirement') {\n                $(row).addClass('table-warning');\n            }\n            if (data['type'] === 'not set') {\n                $(row).addClass('table-light');\n            }\n        },\n        \"infoCallback\": function (settings, start, end, max, total) {\n            let api = this.api();\n            let pageInfo = api.page.info();\n\n            $('#clear-all-filters-text').html(\"Showing \" + total + \"/\" + pageInfo.recordsTotal + \". Clear all.\");\n\n            let result = \"Showing \" + start + \" to \" + end + \" of \" + total + \" entries\";\n            result += \" (filtered from \" + pageInfo.recordsTotal + \" total entries).\";\n\n            return result;\n        },\n        \"initComplete\": function () {\n            $('#search_bar').val(req_search_string);\n            $('#type-filter-input').val(filter_type_string);\n            $('#tag-filter-input').val(filter_tag_string);\n            $('#status-filter-input').val(filter_status_string);\n\n            let requirements_table = this.api();\n            bind_requirement_id_to_modals(requirements_table);\n            init_datatable_manipulators(requirements_table);\n            init_ultimate_requirements_table_connection(requirements_table);\n\n            utils.process_url_query(get_query);\n            update_search();\n            update_filter();\n\n            // Enable Hanfor specific requirements table filtering.\n            $.fn.dataTable.ext.search.push(function (settings, data) {\n                // data contains the row. data[0] is the content of the first column in the actual row.\n                // Return true to include the row into the data. false to exclude.\n                return evaluate_search(data);\n            });\n\n            // this.api().draw();\n\n        }\n    });\n    new $.fn.dataTable.ColReorder(table, {});\n}\n\nfunction evaluate_search(data) {\n    return search_tree.evaluate(data, visible_columns) && filter_tree.evaluate(data, visible_columns);\n}\n\n/**\n * Bind the requirements table manipulators to the table.\n * Initialize manipulators behaviour.\n * @param requirements_table The requirements table\n */\nfunction init_datatable_manipulators(requirements_table) {\n    // Headers extension: Add index to address in search.\n    requirements_table.columns().every(function (index) {\n        if (index > 0) requirements_table.column(index).header().append(' (' + index + ')');\n    });\n\n    // Save button\n    $('#save_requirement_modal').click(function () {\n        store_requirement(requirements_table);\n    });\n\n    // Table Search related stuff.\n    // Bind big custom searchbar to search the table.\n    $('#search_bar').keypress(function (e) {\n        if (e.which === 13) { // Search on enter.\n            update_search();\n            requirements_table.draw();\n        }\n    });\n\n    // Table filters.\n    $('#type-filter-input').autocomplete({\n        minLength: 0, source: available_types, delay: 100\n    });\n\n    $('#status-filter-input').autocomplete({\n        minLength: 0, source: available_status, delay: 100\n    });\n\n    $('#tag-filter-input').autocomplete({\n        minLength: 0, source: available_tags, delay: 100\n    });\n\n    $('#tag-filter-input, #status-filter-input, #type-filter-input')\n        .on('focus', function () {\n            $(this).keydown();\n        })\n        .on('keypress', function (e) {\n            if (e.which === 13) { // Search on Enter.\n                update_filter();\n                requirements_table.draw();\n            }\n        });\n\n    $('#table-filter-toggle').click(function () {\n        $('#tag-filter-input').autocomplete({source: available_tags});\n        $('#type-filter-input').autocomplete({source: available_types});\n    });\n\n    // Clear all applied searches.\n    $('.clear-all-filters').click(function () {\n        clear_all_search_filter_inputs();\n        requirements_table.draw();\n    });\n\n    // Listen for tool section triggers.\n    $('#gen-req-from-selection').click(function () {\n        let req_ids = [];\n        requirements_table.rows({search: 'applied'}).every(function () {\n            let d = this.data();\n            req_ids.push(d['id']);\n        });\n        $('#selected_requirement_ids').val(JSON.stringify(req_ids));\n        $('#generate_req_form').submit();\n    });\n\n    $('#gen-csv-from-selection').click(function () {\n        let req_ids = [];\n        requirements_table.rows({search: 'applied'}).every(function () {\n            let d = this.data();\n            req_ids.push(d['id']);\n        });\n        $('#selected_csv_requirement_ids').val(JSON.stringify(req_ids));\n        $('#generate_csv_form').submit();\n    });\n\n    $('#gen-xls-from-selection').click(function () {\n        let req_ids = [];\n        requirements_table.rows({search: 'applied'}).every(function () {\n            let d = this.data();\n            req_ids.push(d['id']);\n        });\n        $('#selected_xls_requirement_ids').val(JSON.stringify(req_ids));\n        $('#generate_xls_form').submit();\n    });\n\n    // Column toggling\n    $('.column-toggle-button').on('click', function (e) {\n        e.preventDefault();\n\n        // Get the column API object\n        let column = requirements_table.column($(this).attr('data-column'));\n\n        // Toggle the visibility\n        column.visible(!column.visible());\n        update_visible_columns_information();\n    });\n\n    $('.reset-column-toggle').on('click', function (e) {\n        e.preventDefault();\n        requirements_table.columns('.default-col').visible(true);\n        requirements_table.columns('.extra-col').visible(false);\n        update_visible_columns_information();\n    });\n    update_visible_columns_information();\n\n    // Select rows\n    $('.select-all-button').on('click', function () {\n        // Toggle selection on\n        if ($(this).hasClass('btn-secondary')) {\n            requirements_table.rows({page: 'current'}).select();\n        } else { // Toggle selection off\n            requirements_table.rows({page: 'current'}).deselect();\n        }\n        // Toggle button state.\n        $('.select-all-button').toggleClass('btn-secondary btn-primary');\n    });\n\n    // Toggle \"Select all rows to `off` on user specific selection.\"\n    requirements_table.on('user-select', function () {\n        let select_buttons = $('.select-all-button');\n        select_buttons.removeClass('btn-primary');\n        select_buttons.addClass('btn-secondary ');\n    });\n\n    // Bind autocomplete for \"edit-selected\" inputs\n    $('#multi-add-tag-input, #multi-remove-tag-input').autocomplete({\n        minLength: 0, source: available_tags, delay: 100\n    }).on('focus', function () {\n        $(this).keydown();\n    }).val('');\n\n    $('#multi-set-status-input').autocomplete({\n        minLength: 0, source: available_status, delay: 100\n    }).on('focus', function () {\n        $(this).keydown();\n    }).val('');\n\n    $('.apply-multi-edit').click(function () {\n        apply_multi_edit(requirements_table);\n    });\n\n    // $('.add_top_guess_button').confirmation({\n    //     rootSelector: '.add_top_guess_button'\n    // }).click(function () {\n    //     add_top_guess_to_selected_requirements(requirements_table);\n    // });\n\n    $('.add_top_guess_button').bootstrapConfirmButton({\n        onConfirm: function () {\n            add_top_guess_to_selected_requirements(requirements_table)\n        }\n    })\n}\n\n/**\n * Stores the active (in modal) requirement and updates the row in the requirements table.\n * @param {DataTable} requirements_table\n */\nfunction store_requirement(requirements_table) {\n    let requirement_modal_content = $('.modal-content');\n    requirement_modal_content.LoadingOverlay('show');\n\n    const req_id = $('#requirement_id').val();\n    const req_status = $('#requirement_status').val();\n    const updated_formalization = $('#requirement_modal').data('updated_formalization');\n    const associated_row_id = parseInt($('#modal_associated_row_index').val());\n\n    // Fetch the formalizations\n    let formalizations = {};\n    $('.formalization_card').each(function () {\n        // Scope and Pattern\n        let formalization = {};\n        formalization['id'] = $(this).attr('title');\n        $(this).find('select').each(function () {\n            if ($(this).hasClass('scope_selector')) {\n                formalization['scope'] = $(this).val();\n            }\n            if ($(this).hasClass('pattern_selector')) {\n                formalization['pattern'] = $(this).val();\n            }\n        });\n\n        // Expressions\n        formalization['expression_mapping'] = {};\n        $(this).find(\"textarea.reqirement-variable\").each(function () {\n            if ($(this).attr('title') !== '') formalization['expression_mapping'][$(this).attr('title')] = $(this).val();\n        });\n\n        formalizations[formalization['id']] = formalization;\n    });\n\n    let tag_comments = new Map();\n    $(\"#tags_comments_table tr:gt(0)\").each(function () {\n        let tag = $(this).find(\"td:eq(0)\").text();\n        let comment = $(this).find(\"textarea:eq(0)\").val();\n        tag_comments.set(tag, comment);\n    })\n\n    // Store the requirement.\n    $.post(\"api/req/update\", {\n            id: req_id,\n            row_idx: associated_row_id,\n            update_formalization: updated_formalization,\n            tags: JSON.stringify(Object.fromEntries(tag_comments)),\n            status: req_status,\n            formalizations: JSON.stringify(formalizations)\n        }, // Update requirements table on success or show an error message.\n        function (data) {\n            requirement_modal_content.LoadingOverlay('hide', true);\n            if (data['success'] === false) {\n                alert(data['errormsg']);\n            } else {\n                requirements_table.row(associated_row_id).data(data);\n\n                //$('#requirement_modal').data('unsaved_changes', false).modal('hide');\n                $('#requirement_modal').data('unsaved_changes', false)\n\n                const requirement_modal = document.querySelector('#requirement_modal')\n                Modal.getOrCreateInstance(requirement_modal).hide()\n            }\n        }).done(function () {\n        update_logs();\n    });\n}\n\n/**\n * Load requirements datatable definitions. Trigger build of a fresh requirement datatable.\n */\nfunction load_datatable() {\n    // Initialize the Column defs.\n    // First set the static colum definitions.\n    let columnDefs = [{\n        \"orderable\": false, \"className\": 'select-checkbox', \"targets\": [0], \"data\": null, \"defaultContent\": \"\"\n    }, {\n        \"targets\": [1], \"data\": \"pos\"\n    }, {\n        \"targets\": [2], \"data\": \"id\", \"render\": function (data) {\n            return '<a href=\"#\">' + utils.escapeHtml(data) + '</a>';\n        }\n    }, {\n        \"targets\": [3], \"data\": \"desc\", \"render\": function (data) {\n            return '<div class=\"white-space-pre\">' + utils.escapeHtml(data) + '</div>';\n        }\n    }, {\n        \"targets\": [4], \"data\": \"type\", \"render\": function (data) {\n            if (available_types.indexOf(data) <= -1) {\n                available_types.push(data);\n            }\n            return utils.escapeHtml(data);\n        }\n    }, {\n        \"targets\": [5], \"data\": \"tags\", \"render\": function (data, type, row) {\n            let result = '';\n            $(data).each(function (id, tag) {\n                if (tag.length > 0) {\n                    result += '<span class=\"badge\" style=\"background-color: ' + get_tag_color(tag) + '\">' + utils.escapeHtml(tag) + '</span></br>' + \" \";\n                }\n            });\n            return result;\n        }\n\n    }, {\n        \"targets\": [6], \"data\": \"status\", \"render\": function (data) {\n            return '<span class=\"badge bg-info\">' + data + '</span></br>';\n        }\n    }, {\n        \"targets\": [7], \"data\": \"formal\", \"render\": function (data, type, row) {\n            let result = '';\n            if (row.formal.length > 0) {\n                $(data).each(function (id, formalization) {\n                    if (formalization.length > 0) {\n                        result += '<div class=\"white-space-pre\">' + utils.escapeHtml(formalization) + '</div>';\n                    }\n                });\n            }\n            return result;\n        }\n    }];\n    // Load generic colums.\n    $.get(\"api/table/colum_defs\", '', function (data) {\n        const dataLength = data['col_defs'].length;\n        for (let i = 0; i < dataLength; i++) {\n            columnDefs.push({\n                \"targets\": [parseInt(data['col_defs'][i]['target'])],\n                \"data\": data['col_defs'][i]['csv_name'],\n                \"visible\": false,\n                \"searchable\": true\n            });\n        }\n    }).done(function () {\n        init_datatable(columnDefs);\n    });\n}\n\n/**\n * Bind the Links to open a requirement modal.\n * Implement Behaviour:\n *  * Load and show requirement data\n * @param requirements_table\n */\nfunction bind_requirement_id_to_modals(requirements_table) {\n    // Add listener for clicks on the Rows.\n    $('#requirements_table').find('tbody').on('click', 'a', function (event) {\n        // prevent body to be scrolled to the top.\n        event.preventDefault();\n        let row_idx = requirements_table.row($(this).closest('tr')).index();\n        load_requirement(row_idx);\n    });\n}\n\n/**\n * Get the color for a tag\n */\nfunction get_tag_color(tag_name) {\n    return tag_colors.hasOwnProperty(tag_name) ? tag_colors[tag_name] : 'var(--bs-info)';\n}\n\n/**\n * SEARCH TAB\n * =====================================================================================================================\n */\n\n/**\n * Load the hanfor frontend meta settings.\n */\nfunction initialise_search_bar() {\n    let search_bar = $(\"#search_bar\");\n    new Awesomplete(search_bar[0], {\n        filter: function (text, input) {\n            let result = false;\n            // If we have an uneven number of \":\"\n            // We check if we have a match in the input tail starting from the last \":\"\n            if ((input.split(\":\").length - 1) % 2 === 1) {\n                result = Awesomplete.FILTER_CONTAINS(text, input.match(/[^:]*$/)[0]);\n            }\n            return result;\n        }, item: function (text, input) {\n            // Match inside \":\" enclosed item.\n            return Awesomplete.ITEM(text, input.match(/(:)([\\S]*$)/)[2]);\n        }, replace: function (text) {\n            // Cut of the tail starting from the last \":\" and replace by item text.\n            const before = this.input.value.match(/(.*)(:(?!.*:).*$)/)[1];\n            this.input.value = before + text;\n        }, list: search_autocomplete, minChars: 1, autoFirst: true\n    });\n}\n\n/**\n * Update the search expression tree.\n */\nfunction update_search() {\n    req_search_string = $('#search_bar').val().trim();\n    sessionStorage.setItem('req_search_string', req_search_string);\n    search_tree = SearchNode.fromQuery(req_search_string);\n}\n\n/**\n * Clear all user input in filters and search bar. Reload the table.\n */\nfunction clear_all_search_filter_inputs() {\n    $('#status-filter-input').val('').effect(\"highlight\", {color: 'green'}, 500);\n    $('#tag-filter-input').val('').effect(\"highlight\", {color: 'green'}, 500);\n    $('#type-filter-input').val('').effect(\"highlight\", {color: 'green'}, 500);\n    $('#search_bar').val('').effect(\"highlight\", {color: 'green'}, 500);\n    update_filter();\n    update_search();\n}\n\n/**\n * FILTER TAB\n * =====================================================================================================================\n */\n\n/**\n * Update the filter search tree used to filter the table by the values from the Filter tab.\n */\nfunction update_filter() {\n    filter_search_array = [];\n\n    function pad_with_parantheses(array) {\n        return [\"(\"].concat(array, [\")\"]);\n    }\n\n    function add_query(array, query, target) {\n        if (query.length > 0) {\n            if (array.length > 0) {\n                array = array.concat([\":AND:\"]);\n            }\n            array = array.concat(pad_with_parantheses(SearchNode.awesomeQuerySplitt0r(query, target)));\n        }\n        return array\n    }\n\n    filter_status_string = $('#status-filter-input').val();\n    filter_tag_string = $('#tag-filter-input').val();\n    filter_type_string = $('#type-filter-input').val();\n\n    sessionStorage.setItem('filter_status_string', filter_status_string);\n    sessionStorage.setItem('filter_tag_string', filter_tag_string);\n    sessionStorage.setItem('filter_type_string', filter_type_string);\n\n    filter_search_array = add_query(filter_search_array, filter_type_string, 4);\n    filter_search_array = add_query(filter_search_array, filter_tag_string, 5);\n    filter_search_array = add_query(filter_search_array, filter_status_string, 6);\n\n    filter_tree = SearchNode.searchArrayToTree(filter_search_array);\n}\n\n/**\n * COLUMNS TAB\n * =====================================================================================================================\n */\n\n/**\n * Update the color of the column toggle buttons.\n * Column visible -> Button blue (btn-info).\n * Column not visible -> Button grey (btn-secondary).\n * Update visible_columns\n */\nfunction update_visible_columns_information() {\n    let requirements_table = $('#requirements_table').DataTable();\n    let new_visible_columns = [];\n    $.each(requirements_table.columns().visible(), function (key, value) {\n        if (value === false) {\n            $('#col_toggle_button_' + key).removeClass('btn-info').addClass('btn-secondary');\n            new_visible_columns.push(false);\n        } else {\n            $('#col_toggle_button_' + key).removeClass('btn-secondary').addClass('btn-info');\n            new_visible_columns.push(true);\n        }\n    });\n    visible_columns = new_visible_columns;\n}\n\n/**\n * EDIT SELECTED TAB\n * =====================================================================================================================\n */\n\n/**\n * @param requirements_table\n * @returns {Array} User selected requirement ids.\n */\nfunction get_selected_requirement_ids(requirements_table) {\n    let selected_ids = [];\n    requirements_table.rows({selected: true}).every(function () {\n        let d = this.data();\n        selected_ids.push(d['id']);\n    });\n\n    return selected_ids\n}\n\nfunction apply_multi_edit(requirements_table) {\n    let page = $('body');\n    page.LoadingOverlay('show');\n    let add_tag = $('#multi-add-tag-input').val().trim();\n    let remove_tag = $('#multi-remove-tag-input').val().trim();\n    let set_status = $('#multi-set-status-input').val().trim();\n    let selected_ids = get_selected_requirement_ids(requirements_table);\n\n    $.post(\"api/req/multi_update\", {\n            add_tag: add_tag, remove_tag: remove_tag, set_status: set_status, selected_ids: JSON.stringify(selected_ids)\n        }, // Update requirements table on success or show an error message.\n        function (data) {\n            page.LoadingOverlay('hide', true);\n            if (data['success'] === false) {\n                alert(data['errormsg']);\n            } else {\n                location.reload();\n            }\n        });\n}\n\nfunction add_top_guess_to_selected_requirements(requirements_table) {\n    let page = $('body');\n    page.LoadingOverlay('show');\n    let selected_ids = get_selected_requirement_ids(requirements_table);\n    let insert_mode = $('#top_guess_append_mode').val();\n\n    $.post(\"api/req/multi_add_top_guess\", {\n            selected_ids: JSON.stringify(selected_ids), insert_mode: insert_mode\n        }, // Update requirements table on success or show an error message.\n        function (data) {\n            page.LoadingOverlay('hide', true);\n            if (data['success'] === false) {\n                alert(data['errormsg']);\n            } else {\n                location.reload();\n            }\n        });\n}\n\n/**\n * LOG TAB\n * =====================================================================================================================\n */\n\n/**\n * Refresh the hanfor frontend logs.\n */\nfunction update_logs() {\n    $.get(\"api/logs/get\", '', function (data) {\n        $('#log_textarea').html(data);\n    }).done(function () {\n        // Bind direct requirement links to load the modal.\n        $('.req_direct_link').click(function () {\n            load_requirement(get_rowidx_by_reqid($(this).data(\"rid\")));\n        });\n        $('#log_textarea').scrollTop(100000);\n    });\n}\n\n/**\n * Find the datatable row index for a requirement by its requirement id.\n * @param {number} rid the requirement id.\n * @returns {number} row_index the datatables row index.\n */\nfunction get_rowidx_by_reqid(rid) {\n    let requirement_table = $('#requirements_table').DataTable();\n    let result = -1;\n    requirement_table\n        .column(2)\n        .data()\n        .filter(function (value, index) {\n            if (String(value) === String(rid)) {\n                result = index;\n                return true;\n            }\n            return false;\n        });\n    return result;\n}\n\n/**\n * REQUIREMENT MODAL\n * =====================================================================================================================\n */\n\n/**\n * Initialize the requirement modal behaviour.\n */\nfunction init_modal() {\n    let requirement_modal = $('#requirement_modal');\n    // Initialize tag autocomplete filed in the requirements modal.\n    $('#requirement_tag_field').tokenfield({\n        autocomplete: {\n            source: available_tags, delay: 100\n        }, showAutocompleteOnFocus: true\n    }).change(function () {\n        requirement_modal.data('unsaved_changes', true);\n    });\n\n    $('#requirement_status').change(function () {\n        $('#requirement_modal').data('unsaved_changes', true);\n    });\n\n    //requirement_modal.on('hide.bs.modal', function (event) {\n    requirement_modal[0].addEventListener('hide.bs.modal', function (event) {\n        modal_closing_routine(event);\n    });\n\n    // Handle ESC key\n    $(document).keyup(function (e) {\n        // If modal is open and ESC pressed (ESC maps to keyCode \"27\")\n        if ($('.modal:visible').length && e.keyCode === 27) {\n            let focused_input = $('input[type=text], textarea, select').filter(\":focus\");\n            // If no input elements in focus => Close modal.\n            if (focused_input.length === 0) {\n                // First hide the autoguess modal\n                if ($('#requirement_guess_modal:visible').length) {\n                    //$('#requirement_guess_modal').modal('hide');\n                    Modal.getOrCreateInstance('#requirement_guess_modal').hide()\n                } else {\n                    //$('#requirement_modal').modal('hide');\n                    Modal.getOrCreateInstance('#requirement_modal').hide()\n                }\n            } else {\n                // Defocus input elements.\n                focused_input.each(function () {\n                    $(this).blur();\n                });\n            }\n        }\n    });\n\n    // Clear the Modal after closing modal.\n    // In case of stacked modals and on modal closing:\n    // Prevent removal of modal-open class from body if a modal remains. This will keep the scrollbar intact.\n    requirement_modal.on('hidden.bs.modal', function () {\n        $('#requirement_tag_field').val('');\n        $('#requirement_tag_field-tokenfield').val('');\n    });\n\n    // Listener for adding new formalizations.\n    $('#add_formalization').click(function () {\n        add_formalization();\n    });\n\n    // Listener for adding new guessed formalizations.\n    $('#add_gussed_formalization').click(function () {\n        fetch_available_guesses();\n    });\n\n    $(\".modal\").on('hidden.bs.modal', function () {\n        if ($('.modal:visible').length) {\n            $('body').addClass('modal-open');\n        } else {\n            $('textarea').each(function () {\n                autosize.destroy($(this));\n            });\n        }\n    });\n\n    $('#formalization_accordion').on('shown.bs.collapse', '.card', function () {\n        $(this).find('textarea').each(function () {\n            autosize($(this));\n            autosize.update($(this));\n        });\n    });\n\n    // Initialize variables.\n    update_vars();\n}\n\n/**\n * Handle requirement modal hiding event.\n * Prevent hiding on unsaved changes by asking user feedback (discard, save, back to edit).\n * @param event | the modal hiding event.\n */\nfunction modal_closing_routine(event) {\n    const unsaved_changes = $('#requirement_modal').data('unsaved_changes');\n    if (unsaved_changes === true) {\n        const force_close = confirm(\"You have unsaved changes, do you really want to close?\");\n        if (force_close !== true) {\n            event.preventDefault();\n        }\n    }\n}\n\nfunction load_requirement(row_idx) {\n    if (row_idx === -1) {\n        alert(\"Requirement not found.\");\n        return\n    }\n\n    load_tags();\n\n    // Get row data\n    let data = $('#requirements_table').DataTable().row(row_idx).data();\n\n    // Prepare requirement Modal\n    let requirement_modal_content = $('.modal-content');\n\n    //$('#requirement_modal').modal('show');\n    Modal.getOrCreateInstance('#requirement_modal').show();\n\n    requirement_modal_content.LoadingOverlay('show');\n    $('#formalization_accordion').html('');\n\n    // Set available tags.\n    $('#requirement_tag_field').data('bs.tokenfield').$input.autocomplete({source: available_tags});\n\n    // Get the requirement data and set the modal.\n    $.get(\"api/req/get\", {id: data['id'], row_idx: row_idx}, function (data) {\n        if (data.success === false) {\n            alert('Could Not load the Requirement: ' + data.errormsg);\n            return;\n        }\n        // Meta information\n        $('#requirement_id').val(data.id);\n        $('#modal_associated_row_index').val(row_idx);\n        available_vars = data.available_vars;\n        available_vars = available_vars.concat(data.additional_static_available_vars);\n        type_inference_errors = data.type_inference_errors;\n        update_fuse();\n\n        // Visible information\n        $('#requirement_modal_title').html(data.id + ': ' + data.type);\n        $('#description_textarea').text(data.desc).change();\n        $('#add_guess_description').text(data.desc).change();\n\n        // Parse the formalizations\n        $('#formalization_accordion').html(data.formalizations_html);\n\n        $('#requirement_scope').val(data.scope);\n        $('#requirement_pattern').val(data.pattern);\n\n        // remove all lines from the tag comment table\n        $('#tags_comments_table').find(\"tr:gt(0)\").remove();\n        // set Tag field and comments in Table (table rows are created via event)\n        $('#requirement_tag_field').tokenfield('setTokens', data.tags)\n        $(\"#tags_comments_table tr:gt(0)\").each(function () {\n            let tag = $(this).find(\"td:eq(0)\").text();\n            $(this).find(\"textarea:eq(0)\").val(data.tags_comments[tag]);\n        })\n\n        $('#requirement_status').val(data.status);\n        // Set csv_data\n        let csv_row_content = $('#csv_content_accordion');\n        csv_row_content.html('');\n\n        let csv_data = data.csv_data;\n        for (const key in csv_data) {\n            if (csv_data.hasOwnProperty(key)) {\n                const value = csv_data[key];\n                csv_row_content.append('<p><strong>' + key + ':</strong>' + value + '</p>');\n            }\n        }\n\n        // Set revision diff data.\n        let revision_diff_link = $('#show_revision_diff');\n        if ($.isEmptyObject(data.revision_diff)) {\n            revision_diff_link.hide();\n        } else {\n            revision_diff_link.show();\n        }\n\n        let revision_diff_content = $('#revision_diff_accordion');\n        revision_diff_content.html('');\n\n        let revision_diff = data.revision_diff;\n        for (const key in revision_diff) {\n            if (revision_diff.hasOwnProperty(key)) {\n                const value = revision_diff[key];\n                revision_diff_content.append('<p><strong>' + key + ':</strong><pre>' + value + '</pre></p>');\n            }\n        }\n\n        // Set used variables data.\n        let used_variables_accordion = $('#used_variables_accordion');\n        used_variables_accordion.html('');\n\n        data.vars.forEach(function (var_name) {\n            let query = '?command=search&col=1&q=%5C%22' + var_name + '%5C%22';\n            used_variables_accordion.append('<span class=\"badge bg-info\">' + '<a href=\"./variables' + query + '\" target=\"_blank\">' + var_name + '</a>' + '</span>&numsp;');\n        });\n\n    }).done(function () {\n        update_vars();\n        bind_var_autocomplete();\n        update_formalization();\n        $('#requirement_modal').data({\n            'unsaved_changes': false, 'updated_formalization': false\n        });\n        requirement_modal_content.LoadingOverlay('hide', true);\n    });\n}\n\n/**\n * Reload fuse the fuzzy search provider used for autocomplete.\n * fuse will be reloaded with available_vars.\n */\nfunction update_fuse() {\n    let options = {\n        shouldSort: true,\n        threshold: 0.6,\n        location: 0,\n        distance: 100,\n        maxPatternLength: 12,\n        minMatchCharLength: 1,\n        keys: undefined\n    };\n\n    fuse = new Fuse(available_vars, options);\n}\n\n/**\n * Search term in the fuse fuzzy search provider.\n * Fuse is initialized with the available_vars.\n * @param term\n */\nfunction fuzzy_search(term) {\n    return fuse.search(term);\n}\n\n/**\n * Bind autocomplete trigger to all formalization input textareas.\n *\n */\nfunction bind_var_autocomplete() {\n    $(\".reqirement-variable\").each(function () {\n        add_var_autocomplete(this);\n    });\n}\n\n/**\n * Adds the variable autocompletion to a textarea given by dom_obj.\n * @param dom_obj\n */\nfunction add_var_autocomplete(dom_obj) {\n    const textcomplete = new Textcomplete(new TextareaEditor(dom_obj), [{\n        match: /(|\\s|[!=&\\|>]+)(\\w+)$/, index: 2, search: function (term, callback, match) {\n            let include_elems = fuzzy_search(term);\n            let result = [];\n            for (let i = 0; i < Math.min(10, include_elems.length); i++) {\n                result.push(available_vars[include_elems[i]]);\n            }\n            callback(result);\n        }, replace: function (result) {\n            return '$1' + result + ' ';\n        }\n    }], {\n        dropdown: {\n            className: 'dropdown-menu textcomplete-dropdown', maxCount: 10, style: {\n                display: 'none', position: 'absolute', zIndex: '9999'\n            }, // parent: dom_obj.parentNode, // Does not work in modal.\n            item: {\n                className: 'dropdown-item', activeClassName: 'dropdown-item active',\n            }\n        }\n    })\n\n    $(document).on('click', function (event) {\n        if (textcomplete !== event.target) {\n            textcomplete.hide()\n        }\n    })\n}\n\nfunction add_formalization() {\n    // Request a new Formalization. And add its edit elements to the modal.\n    let requirement_modal_content = $('.modal-content');\n    requirement_modal_content.LoadingOverlay('show');\n\n    const req_id = $('#requirement_id').val();\n    $.post(\"api/req/new_formalization\", {\n        id: req_id\n    }, function (data) {\n        requirement_modal_content.LoadingOverlay('hide', true);\n        if (data['success'] === false) {\n            alert(data['errormsg']);\n        } else {\n            let formalization = $(data['html']);\n            formalization.find('.reqirement-variable').each(function () {\n                add_var_autocomplete(this);\n            });\n            formalization.appendTo('#formalization_accordion');\n        }\n    }).done(function () {\n        update_vars();\n        update_formalization();\n        update_logs();\n    });\n}\n\nfunction delete_formalization(formal_id, card) {\n    let requirement_modal_content = $('.modal-content');\n    requirement_modal_content.LoadingOverlay('show');\n    const req_id = $('#requirement_id').val();\n    $.post(\"api/req/del_formalization\", {\n        requirement_id: req_id, formalization_id: formal_id\n    }, function (data) {\n        requirement_modal_content.LoadingOverlay('hide', true);\n        if (data['success'] === false) {\n            alert(data['errormsg']);\n        } else {\n            card.remove();\n        }\n    }).done(function () {\n        update_vars();\n        update_formalization();\n        update_logs();\n    });\n}\n\n/**\n * Updates the formalization textarea based on the selected scope and expressions in P, Q, R, S, T, ... .\n */\nfunction update_formalization() {\n    $('.formalization_card').each(function () {\n        // Fetch attributes\n        const formalization_id = $(this).attr('title');\n\n        let formalization = '';\n        let formalization_textarea = $('#current_formalization_textarea' + formalization_id);\n        const selected_scope = $('#requirement_scope' + formalization_id).find('option:selected').text().replace(/\\s\\s+/g, ' ');\n        const selected_pattern = $('#requirement_pattern' + formalization_id).find('option:selected').text().replace(/\\s\\s+/g, ' ');\n\n        if (selected_scope !== 'None' && selected_pattern !== 'None') {\n            formalization = selected_scope + ', ' + selected_pattern + '.';\n        }\n\n        // Update formalization with variables.\n        let var_p = $('#formalization_var_p' + formalization_id).val();\n        let var_q = $('#formalization_var_q' + formalization_id).val();\n        let var_r = $('#formalization_var_r' + formalization_id).val();\n        let var_s = $('#formalization_var_s' + formalization_id).val();\n        let var_t = $('#formalization_var_t' + formalization_id).val();\n        let var_u = $('#formalization_var_u' + formalization_id).val();\n        let var_v = $('#formalization_var_v' + formalization_id).val();\n\n        if (var_p.length > 0) {\n            formalization = formalization.replace(/{P}/g, parse_vars_to_link(var_p));\n        }\n        if (var_q.length > 0) {\n            formalization = formalization.replace(/{Q}/g, parse_vars_to_link(var_q));\n        }\n        if (var_r.length > 0) {\n            formalization = formalization.replace(/{R}/g, parse_vars_to_link(var_r));\n        }\n        if (var_s.length > 0) {\n            formalization = formalization.replace(/{S}/g, parse_vars_to_link(var_s));\n        }\n        if (var_t.length > 0) {\n            formalization = formalization.replace(/{T}/g, parse_vars_to_link(var_t));\n        }\n        if (var_u.length > 0) {\n            formalization = formalization.replace(/{U}/g, parse_vars_to_link(var_u));\n        }\n        if (var_v.length > 0) {\n            formalization = formalization.replace(/{V}/g, parse_vars_to_link(var_v));\n        }\n\n        formalization_textarea.html(formalization);\n        autosize.update(formalization_textarea);\n    });\n    $('#requirement_modal').data({\n        'unsaved_changes': true, 'updated_formalization': true\n    });\n}\n\n/**\n * Replace variables in a formalization string by links to that variable.\n * Only if variable is available in the global \"available_vars\" array.\n * Example: foo || bar -> <a href ...>foo</a> || <a href ...>bar</a>\n * @param formal_string\n * @returns {string}\n */\nfunction parse_vars_to_link(formal_string) {\n    let result = '';\n\n    // Split the formalization string on possible variable delimiters given by the boogie grammar.\n    // We enclose the regular expression by /()/g to yield the delimiters itself: We want to keep them in the result.\n    formal_string.split(/([\\s&<>!()=:\\[\\]{}\\-|+*,])/g).forEach(function (chunk) {\n        if (available_vars.includes(chunk)) {\n            let query = '?command=search&col=1&q=%5C%22' + chunk + '%5C%22';\n            result += '<a href=\"./variables' + query + '\" target=\"_blank\"' + '  title=\"Go to declaration of ' + chunk + '\" class=\"alert-link\">' + chunk + '</a>';\n        } else {\n            // We need to escape potential HTML special chars to prevent a broken display.\n            result += utils.escapeHtml(chunk);\n        }\n    });\n    return result;\n}\n\n/**\n * Enable/disable the active variables (P, Q, R, ...) in the requirement modal based on scope and pattern.\n */\nfunction update_vars() {\n    $('.requirement_var_group').each(function () {\n        $(this).hide();\n        $(this).removeClass('type-error');\n    });\n\n    $('.formalization_card').each(function () {\n        // Fetch attributes\n        const formalization_id = $(this).attr('title');\n        const selected_scope = $('#requirement_scope' + formalization_id).val();\n        const selected_pattern = $('#requirement_pattern' + formalization_id).val();\n        let header = $('#formalization_heading' + formalization_id);\n        let var_p = $('#requirement_var_group_p' + formalization_id);\n        let var_q = $('#requirement_var_group_q' + formalization_id);\n        let var_r = $('#requirement_var_group_r' + formalization_id);\n        let var_s = $('#requirement_var_group_s' + formalization_id);\n        let var_t = $('#requirement_var_group_t' + formalization_id);\n        let var_u = $('#requirement_var_group_u' + formalization_id);\n        let var_v = $('#requirement_var_group_v' + formalization_id);\n\n        // Set the red boxes for type inference failed expressions.\n        if (formalization_id in type_inference_errors) {\n            for (let i = 0; i < type_inference_errors[formalization_id].length; i++) {\n                $('#formalization_var_' + type_inference_errors[formalization_id][i] + formalization_id)\n                    .addClass('type-error');\n                header.addClass('type-error-head');\n            }\n        } else {\n            header.removeClass('type-error-head');\n        }\n\n        switch (selected_scope) {\n            case 'BEFORE':\n            case 'AFTER':\n                var_p.show();\n                break;\n            case 'BETWEEN':\n            case 'AFTER_UNTIL':\n                var_p.show();\n                var_q.show();\n                break;\n            default:\n                break;\n        }\n\n        Object.keys(_PATTERNS[selected_pattern]['env']).forEach(function (key) {\n            switch (key) {\n                case 'R':\n                    var_r.show();\n                    break;\n                case 'S':\n                    var_s.show();\n                    break;\n                case 'T':\n                    var_t.show();\n                    break;\n                case 'U':\n                    var_u.show();\n                    break;\n                case 'V':\n                    var_v.show();\n                    break;\n            }\n        });\n    });\n}\n\nfunction load_tags() {\n    $.ajax({\n        type: 'GET', url: 'api/tags/'\n    }).done(function (data) {\n        available_tags = []\n        for (let tag of data) {\n            available_tags.push(tag['name']);\n            tag_colors[tag['name']] = tag['color'];\n        }\n    }).fail(function (jqXHR, textStatus, errorThrown) {\n        alert(errorThrown + '\\n\\n' + jqXHR['responseText'])\n    })\n}\n\nfunction bind_tag_field_events() {\n    $(\"#requirement_tag_field\")\n        .on('tokenfield:createtoken', function (e) {\n            let existingTokens = $(this).tokenfield('getTokens');\n            for (const token of existingTokens) {\n                if (e.attrs.value === token.value) return false;\n            }\n        })\n        .on('tokenfield:createdtoken', function (e) {\n            add_tag_table_row(e.attrs.value);\n        })\n        .on('tokenfield:removedtoken', function (e) {\n            $(\"#tags_comments_table tr:gt(0)\").each(function () {\n                let row = $(this);\n                let tag = $(this).find(\"td:eq(0)\").text();\n                if (tag === e.attrs.value) row.remove();\n            })\n        })\n}\n\nfunction add_tag_table_row(tag_name) {\n    //todo: we need to fill the fields with the actional comments (maybe name the fields and\n    // add comments later)\n    var table_row = \"<tr>\" + \"<td>\" + tag_name + \"</td>\" + \"<td><textarea rows='1' class='form-control w-100' type='text'>\" + \"</textarea>\" + \"</td>\";\n    $(\"#tags_comments_table tbody\").append(table_row);\n}\n\n/**\n * REPORT TAB / REPORT MODAL\n * =====================================================================================================================\n */\nfunction open_report_modal(source = false) {\n    let query_textarea = $('#report_query_textarea');\n    let results_textarea = $('#report_results_textarea');\n    let report_title = $('#report_modal_title');\n    let report_name = $('#report_name');\n    let queries = '';\n    let results = '';\n    let name = '';\n    let report_id = -1;\n    let report_modal = $('#report_modal');\n    if (source !== false) {\n        report_id = source.attr('data-id');\n        queries = available_reports[report_id].queries;\n        results = available_reports[report_id].results;\n        name = available_reports[report_id].name;\n    }\n    query_textarea.val(queries).change();\n    results_textarea.val(results).change();\n    report_name.val(name).change();\n    report_title.html(name);\n    $('#save_report').attr('data-id', report_id);\n\n    Modal.getOrCreateInstance(document.querySelector('#report_modal')).show()\n    //report_modal.modal('show');\n}\n\nfunction init_report_generation() {\n    $('#add-new-report').click(function () {\n        open_report_modal();\n    });\n    $('#eval_report').click(function () {\n        evaluate_report();\n    });\n    $('#save_report').click(function () {\n        save_report();\n    });\n    let av_reports = $('#available_reports');\n    av_reports.on('click', '.open-report', function () {\n        open_report_modal($(this));\n    });\n    av_reports.on('click', '.delete-report', function () {\n        delete_report($(this).attr('data-id'));\n    });\n    $('#report_name').change(function () {\n        $('#report_modal_title').html($(this).val());\n    });\n    load_reports();\n}\n\nfunction delete_report(id) {\n    $.ajax({\n        type: \"DELETE\", url: \"api/report/delete\", data: {report_id: id}, success: function (data) {\n            if (data['success'] === false) {\n                alert(data['errormsg']);\n            }\n            load_reports();\n        }\n    });\n}\n\nfunction save_report() {\n    let body = $('body');\n    body.LoadingOverlay('show');\n\n    $.post(\"api/report/set\", {\n        report_querys: $('#report_query_textarea').val(),\n        report_results: $('#report_results_textarea').val(),\n        report_name: $('#report_name').val(),\n        report_id: $('#save_report').attr('data-id')\n    }, function (data) {\n        body.LoadingOverlay('hide', true);\n        if (data['success'] === false) {\n            alert(data['errormsg']);\n        }\n        load_reports();\n    });\n}\n\nfunction load_reports() {\n    $.get(\"api/report/get\", {}, function (data) {\n        if (data['success'] === false) {\n            alert(data['errormsg']);\n        } else {\n            let result = '';\n            available_reports = data.data;\n            $.each(data.data, function (id, report) {\n                result += `<div class=\"card border-primary\">\n                              <div class=\"card-body\">\n                                <h5 class=\"card-title\">${report.name}</h5>\n                                <h6 class=\"card-subtitle mb-2 text-muted\">Query</h6>\n                                <p class=\"card-text report-results\">${report.queries}</p>\n                                <h6 class=\"card-subtitle mb-2 text-muted\">Matches for queries</h6>\n                                <p class=\"card-text report-results\">${report.results}</p>\n                                <a href=\"#\" class=\"card-link open-report\" data-id=\"${id}\">\n                                    Edit (reevaluate) Report.\n                                </a>\n                                <a href=\"#\" class=\"card-link delete-report\" data-id=\"${id}\">Delete Report.</a>\n                              </div>\n                            </div>`;\n            });\n            $('#available_reports').html(result);\n        }\n    });\n}\n\n/**\n * Evaluate the report queries given by the report_query_textarea.\n * Paste the result into the report_results_textarea.\n * @TODO: the .draw() method is potentially overkill, since it will render the whole datatable.\n * So look into callstack and only apply necessary steps to evaluate the new search tree.\n * (.search() would not work since we use our own plugin to support the search expression parsing.)\n */\nfunction evaluate_report() {\n    let body = $('body');\n    body.LoadingOverlay('show');\n    const report_querys = $('#report_query_textarea').val().split('\\n');\n    let reqTable = $('#requirements_table').DataTable();\n    let results = '';\n    const regex = /^(:NAME:)(`(\\w+)`)(.*)/;\n    try {\n        $.each(report_querys, function (id, report_query) {\n            // Test if there is a named query.\n            let match = regex.exec(report_query);\n            if (match != null) {\n                report_query = match[4];\n                id = match[3];\n            }\n            search_tree = SearchNode.fromQuery(report_query);\n            reqTable.draw();\n            let result = reqTable.page.info();\n            results += `\"${id}\":\\t${result.recordsDisplay}\\n`;\n        });\n        $('#report_results_textarea').val(results).change();\n        update_search();\n        reqTable.draw();\n    } catch (err) {\n        alert(err);\n    }\n    body.LoadingOverlay('hide', true);\n}\n\n/**\n * GUESS MODAL\n * =====================================================================================================================\n */\n\n/**\n * Load available guesses into the modal.\n */\nfunction fetch_available_guesses() {\n    let modal = $('#requirement_guess_modal');\n    let available_guesses_cards = $('#available_guesses_cards');\n    let modal_content = $('.modal-content');\n    let requirement_id = $('#requirement_id').val();\n\n    //modal.modal({\n    //    keyboard: false\n    //});\n    new Modal(modal, {keyboard: false});\n\n    //modal.modal('show');\n    Modal.getOrCreateInstance(modal).show();\n\n    modal_content.LoadingOverlay('show');\n    available_guesses_cards.html('');\n\n    function add_available_guess(guess) {\n        let template = '<div class=\"card\">' + '                    <div class=\"pl-1 pr-1\">' + '                        <p>' + guess['string'] + '                        </p>' + '                    </div>' + '                    <button type=\"button\" class=\"btn btn-success btn-sm add_guess\"' + '                            title=\"Add formalization\"' + '                            data-scope=\"' + guess['scope'] + '\"' + '                            data-pattern=\"' + guess['pattern'] + '\"' + '                            data-mapping=\\'' + JSON.stringify(guess['mapping']) + '\\'>' + '                        <strong>+ Add this formalization +</strong>' + '                    </button>' + '                </div>';\n        available_guesses_cards.append(template);\n    }\n\n    $.post(\"api/req/get_available_guesses\", {\n        requirement_id: requirement_id\n    }, function (data) {\n        if (data['success'] === false) {\n            alert(data['errormsg'])\n        } else {\n            for (let i = 0; i < data['available_guesses'].length; i++) {\n                add_available_guess(data['available_guesses'][i]);\n            }\n        }\n    }).done(function () {\n        $('.add_guess').click(function () {\n            add_formalization_from_guess($(this).data('scope'), $(this).data('pattern'), $(this).data('mapping'));\n        });\n        modal_content.LoadingOverlay('hide', true);\n    });\n}\n\nfunction add_formalization_from_guess(scope, pattern, mapping) {\n    // Request a new Formalization. And add its edit elements to the modal.\n    let requirement_modal_content = $('.modal-content');\n    requirement_modal_content.LoadingOverlay('show');\n\n    let requirement_id = $('#requirement_id').val();\n    $.post(\"api/req/add_formalization_from_guess\", {\n        requirement_id: requirement_id, scope: scope, pattern: pattern, mapping: JSON.stringify(mapping)\n    }, function (data) {\n        requirement_modal_content.LoadingOverlay('hide', true);\n        if (data['success'] === false) {\n            alert(data['errormsg']);\n        } else {\n            $('#formalization_accordion').append(data['html']);\n        }\n    }).done(function () {\n        update_vars();\n        update_formalization();\n        bind_var_autocomplete();\n        update_logs();\n    });\n}\n\n\n\n//# sourceURL=webpack://hanfor/./js/requirements.js?");

/***/ }),

/***/ "./node_modules/@textcomplete/core/dist/Completer.js":
/*!***********************************************************!*\
  !*** ./node_modules/@textcomplete/core/dist/Completer.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Completer = void 0;\nconst eventemitter3_1 = __webpack_require__(/*! eventemitter3 */ \"./node_modules/eventemitter3/index.js\");\nconst Strategy_1 = __webpack_require__(/*! ./Strategy */ \"./node_modules/@textcomplete/core/dist/Strategy.js\");\nclass Completer extends eventemitter3_1.EventEmitter {\n    constructor(strategyPropsList) {\n        super();\n        this.handleQueryResult = (searchResults) => {\n            this.emit(\"hit\", { searchResults });\n        };\n        this.strategies = strategyPropsList.map((p) => new Strategy_1.Strategy(p));\n    }\n    destroy() {\n        this.strategies.forEach((s) => s.destroy());\n        return this;\n    }\n    run(beforeCursor) {\n        for (const strategy of this.strategies) {\n            const executed = strategy.execute(beforeCursor, this.handleQueryResult);\n            if (executed)\n                return;\n        }\n        this.handleQueryResult([]);\n    }\n}\nexports.Completer = Completer;\n//# sourceMappingURL=Completer.js.map\n\n//# sourceURL=webpack://hanfor/./node_modules/@textcomplete/core/dist/Completer.js?");

/***/ }),

/***/ "./node_modules/@textcomplete/core/dist/Dropdown.js":
/*!**********************************************************!*\
  !*** ./node_modules/@textcomplete/core/dist/Dropdown.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Dropdown = exports.DEFAULT_DROPDOWN_ITEM_ACTIVE_CLASS_NAME = exports.DEFAULT_DROPDOWN_ITEM_CLASS_NAME = exports.DEFAULT_DROPDOWN_CLASS_NAME = exports.DEFAULT_DROPDOWN_PLACEMENT = exports.DEFAULT_DROPDOWN_MAX_COUNT = void 0;\nconst eventemitter3_1 = __webpack_require__(/*! eventemitter3 */ \"./node_modules/eventemitter3/index.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/@textcomplete/core/dist/utils.js\");\n// Default constants for Dropdown\nexports.DEFAULT_DROPDOWN_MAX_COUNT = 10;\nexports.DEFAULT_DROPDOWN_PLACEMENT = \"auto\";\nexports.DEFAULT_DROPDOWN_CLASS_NAME = \"dropdown-menu textcomplete-dropdown\";\n// Default constants for DropdownItem\nexports.DEFAULT_DROPDOWN_ITEM_CLASS_NAME = \"textcomplete-item\";\nexports.DEFAULT_DROPDOWN_ITEM_ACTIVE_CLASS_NAME = `${exports.DEFAULT_DROPDOWN_ITEM_CLASS_NAME} active`;\nclass Dropdown extends eventemitter3_1.EventEmitter {\n    static create(option) {\n        const ul = document.createElement(\"ul\");\n        ul.className = option.className || exports.DEFAULT_DROPDOWN_CLASS_NAME;\n        Object.assign(ul.style, {\n            display: \"none\",\n            position: \"absolute\",\n            zIndex: \"1000\",\n        }, option.style);\n        const parent = option.parent || document.body;\n        parent === null || parent === void 0 ? void 0 : parent.appendChild(ul);\n        return new Dropdown(ul, option);\n    }\n    constructor(el, option) {\n        super();\n        this.el = el;\n        this.option = option;\n        this.shown = false;\n        this.items = [];\n        this.activeIndex = null;\n    }\n    /**\n     * Render the given search results. Previous results are cleared.\n     *\n     * @emits render\n     * @emits rendered\n     */\n    render(searchResults, cursorOffset) {\n        const event = (0, utils_1.createCustomEvent)(\"render\", { cancelable: true });\n        this.emit(\"render\", event);\n        if (event.defaultPrevented)\n            return this;\n        this.clear();\n        if (searchResults.length === 0)\n            return this.hide();\n        this.items = searchResults\n            .slice(0, this.option.maxCount || exports.DEFAULT_DROPDOWN_MAX_COUNT)\n            .map((r, index) => { var _a; return new DropdownItem(this, index, r, ((_a = this.option) === null || _a === void 0 ? void 0 : _a.item) || {}); });\n        this.setStrategyId(searchResults[0])\n            .renderEdge(searchResults, \"header\")\n            .renderItems()\n            .renderEdge(searchResults, \"footer\")\n            .show()\n            .setOffset(cursorOffset)\n            .activate(0);\n        this.emit(\"rendered\", (0, utils_1.createCustomEvent)(\"rendered\"));\n        return this;\n    }\n    destroy() {\n        var _a;\n        this.clear();\n        (_a = this.el.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(this.el);\n        return this;\n    }\n    /**\n     * Select the given item\n     *\n     * @emits select\n     * @emits selected\n     */\n    select(item) {\n        const detail = { searchResult: item.searchResult };\n        const event = (0, utils_1.createCustomEvent)(\"select\", { cancelable: true, detail });\n        this.emit(\"select\", event);\n        if (event.defaultPrevented)\n            return this;\n        this.hide();\n        this.emit(\"selected\", (0, utils_1.createCustomEvent)(\"selected\", { detail }));\n        return this;\n    }\n    /**\n     * Show the dropdown element\n     *\n     * @emits show\n     * @emits shown\n     */\n    show() {\n        if (!this.shown) {\n            const event = (0, utils_1.createCustomEvent)(\"show\", { cancelable: true });\n            this.emit(\"show\", event);\n            if (event.defaultPrevented)\n                return this;\n            this.el.style.display = \"block\";\n            this.shown = true;\n            this.emit(\"shown\", (0, utils_1.createCustomEvent)(\"shown\"));\n        }\n        return this;\n    }\n    /**\n     * Hide the dropdown element\n     *\n     * @emits hide\n     * @emits hidden\n     */\n    hide() {\n        if (this.shown) {\n            const event = (0, utils_1.createCustomEvent)(\"hide\", { cancelable: true });\n            this.emit(\"hide\", event);\n            if (event.defaultPrevented)\n                return this;\n            this.el.style.display = \"none\";\n            this.shown = false;\n            this.clear();\n            this.emit(\"hidden\", (0, utils_1.createCustomEvent)(\"hidden\"));\n        }\n        return this;\n    }\n    /** Clear search results */\n    clear() {\n        this.items.forEach((i) => i.destroy());\n        this.items = [];\n        this.el.innerHTML = \"\";\n        this.activeIndex = null;\n        return this;\n    }\n    up(e) {\n        return this.shown ? this.moveActiveItem(\"prev\", e) : this;\n    }\n    down(e) {\n        return this.shown ? this.moveActiveItem(\"next\", e) : this;\n    }\n    moveActiveItem(direction, e) {\n        if (this.activeIndex != null) {\n            const activeIndex = direction === \"next\"\n                ? this.getNextActiveIndex()\n                : this.getPrevActiveIndex();\n            if (activeIndex != null) {\n                this.activate(activeIndex);\n                e.preventDefault();\n            }\n        }\n        return this;\n    }\n    activate(index) {\n        if (this.activeIndex !== index) {\n            if (this.activeIndex != null) {\n                this.items[this.activeIndex].deactivate();\n            }\n            this.activeIndex = index;\n            this.items[index].activate();\n        }\n        return this;\n    }\n    isShown() {\n        return this.shown;\n    }\n    getActiveItem() {\n        return this.activeIndex != null ? this.items[this.activeIndex] : null;\n    }\n    setOffset(cursorOffset) {\n        const doc = document.documentElement;\n        if (doc) {\n            const elementWidth = this.el.offsetWidth;\n            if (cursorOffset.left) {\n                const browserWidth = this.option.dynamicWidth\n                    ? doc.scrollWidth\n                    : doc.clientWidth;\n                if (cursorOffset.left + elementWidth > browserWidth) {\n                    cursorOffset.left = browserWidth - elementWidth;\n                }\n                this.el.style.left = `${cursorOffset.left}px`;\n            }\n            else if (cursorOffset.right) {\n                if (cursorOffset.right - elementWidth < 0) {\n                    cursorOffset.right = 0;\n                }\n                this.el.style.right = `${cursorOffset.right}px`;\n            }\n            let forceTop = false;\n            const placement = this.option.placement || exports.DEFAULT_DROPDOWN_PLACEMENT;\n            if (placement === \"auto\") {\n                const dropdownHeight = this.items.length * cursorOffset.lineHeight;\n                forceTop =\n                    cursorOffset.clientTop != null &&\n                        cursorOffset.clientTop + dropdownHeight > doc.clientHeight;\n            }\n            if (placement === \"top\" || forceTop) {\n                this.el.style.bottom = `${doc.clientHeight - cursorOffset.top + cursorOffset.lineHeight}px`;\n                this.el.style.top = \"auto\";\n            }\n            else {\n                this.el.style.top = `${cursorOffset.top}px`;\n                this.el.style.bottom = \"auto\";\n            }\n        }\n        return this;\n    }\n    getNextActiveIndex() {\n        if (this.activeIndex == null)\n            throw new Error();\n        return this.activeIndex < this.items.length - 1\n            ? this.activeIndex + 1\n            : this.option.rotate\n                ? 0\n                : null;\n    }\n    getPrevActiveIndex() {\n        if (this.activeIndex == null)\n            throw new Error();\n        return this.activeIndex !== 0\n            ? this.activeIndex - 1\n            : this.option.rotate\n                ? this.items.length - 1\n                : null;\n    }\n    renderItems() {\n        const fragment = document.createDocumentFragment();\n        for (const item of this.items) {\n            fragment.appendChild(item.el);\n        }\n        this.el.appendChild(fragment);\n        return this;\n    }\n    setStrategyId(searchResult) {\n        const id = searchResult.getStrategyId();\n        if (id)\n            this.el.dataset.strategy = id;\n        return this;\n    }\n    renderEdge(searchResults, type) {\n        const option = this.option[type];\n        const li = document.createElement(\"li\");\n        li.className = `textcomplete-${type}`;\n        li.innerHTML =\n            typeof option === \"function\"\n                ? option(searchResults.map((s) => s.data))\n                : option || \"\";\n        this.el.appendChild(li);\n        return this;\n    }\n}\nexports.Dropdown = Dropdown;\nclass DropdownItem {\n    constructor(dropdown, index, searchResult, props) {\n        this.dropdown = dropdown;\n        this.index = index;\n        this.searchResult = searchResult;\n        this.props = props;\n        this.active = false;\n        this.onClick = (e) => {\n            e.preventDefault();\n            this.dropdown.select(this);\n        };\n        this.className = this.props.className || exports.DEFAULT_DROPDOWN_ITEM_CLASS_NAME;\n        this.activeClassName =\n            this.props.activeClassName || exports.DEFAULT_DROPDOWN_ITEM_ACTIVE_CLASS_NAME;\n        const li = document.createElement(\"li\");\n        li.className = this.active ? this.activeClassName : this.className;\n        const span = document.createElement(\"span\");\n        span.tabIndex = -1;\n        span.innerHTML = this.searchResult.render();\n        li.appendChild(span);\n        li.addEventListener(\"click\", this.onClick);\n        this.el = li;\n    }\n    destroy() {\n        var _a;\n        const li = this.el;\n        (_a = li.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(li);\n        li.removeEventListener(\"click\", this.onClick, false);\n        return this;\n    }\n    activate() {\n        if (!this.active) {\n            this.active = true;\n            this.el.className = this.activeClassName;\n            this.dropdown.el.scrollTop = this.el.offsetTop;\n        }\n        return this;\n    }\n    deactivate() {\n        if (this.active) {\n            this.active = false;\n            this.el.className = this.className;\n        }\n        return this;\n    }\n}\n//# sourceMappingURL=Dropdown.js.map\n\n//# sourceURL=webpack://hanfor/./node_modules/@textcomplete/core/dist/Dropdown.js?");

/***/ }),

/***/ "./node_modules/@textcomplete/core/dist/Editor.js":
/*!********************************************************!*\
  !*** ./node_modules/@textcomplete/core/dist/Editor.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Editor = void 0;\nconst eventemitter3_1 = __webpack_require__(/*! eventemitter3 */ \"./node_modules/eventemitter3/index.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/@textcomplete/core/dist/utils.js\");\nclass Editor extends eventemitter3_1.EventEmitter {\n    /**\n     * Finalize the editor object.\n     *\n     * It is called when associated textcomplete object is destroyed.\n     */\n    destroy() {\n        return this;\n    }\n    /**\n     * It is called when a search result is selected by a user.\n     */\n    applySearchResult(_searchResult) {\n        throw new Error(\"Not implemented.\");\n    }\n    /**\n     * The input cursor's absolute coordinates from the window's left\n     * top corner.\n     */\n    getCursorOffset() {\n        throw new Error(\"Not implemented.\");\n    }\n    /**\n     * Editor string value from head to the cursor.\n     * Returns null if selection type is range not cursor.\n     */\n    getBeforeCursor() {\n        throw new Error(\"Not implemented.\");\n    }\n    /**\n     * Emit a move event, which moves active dropdown element.\n     * Child class must call this method at proper timing with proper parameter.\n     *\n     * @see {@link Textarea} for live example.\n     */\n    emitMoveEvent(code) {\n        const moveEvent = (0, utils_1.createCustomEvent)(\"move\", {\n            cancelable: true,\n            detail: {\n                code: code,\n            },\n        });\n        this.emit(\"move\", moveEvent);\n        return moveEvent;\n    }\n    /**\n     * Emit a enter event, which selects current search result.\n     * Child class must call this method at proper timing.\n     *\n     * @see {@link Textarea} for live example.\n     */\n    emitEnterEvent() {\n        const enterEvent = (0, utils_1.createCustomEvent)(\"enter\", { cancelable: true });\n        this.emit(\"enter\", enterEvent);\n        return enterEvent;\n    }\n    /**\n     * Emit a change event, which triggers auto completion.\n     * Child class must call this method at proper timing.\n     *\n     * @see {@link Textarea} for live example.\n     */\n    emitChangeEvent() {\n        const changeEvent = (0, utils_1.createCustomEvent)(\"change\", {\n            detail: {\n                beforeCursor: this.getBeforeCursor(),\n            },\n        });\n        this.emit(\"change\", changeEvent);\n        return changeEvent;\n    }\n    /**\n     * Emit a esc event, which hides dropdown element.\n     * Child class must call this method at proper timing.\n     *\n     * @see {@link Textarea} for live example.\n     */\n    emitEscEvent() {\n        const escEvent = (0, utils_1.createCustomEvent)(\"esc\", { cancelable: true });\n        this.emit(\"esc\", escEvent);\n        return escEvent;\n    }\n    /**\n     * Helper method for parsing KeyboardEvent.\n     *\n     * @see {@link Textarea} for live example.\n     */\n    getCode(e) {\n        switch (e.keyCode) {\n            case 9: // tab\n            case 13: // enter\n                return \"ENTER\";\n            case 27: // esc\n                return \"ESC\";\n            case 38: // up\n                return \"UP\";\n            case 40: // down\n                return \"DOWN\";\n            case 78: // ctrl-n\n                if (e.ctrlKey)\n                    return \"DOWN\";\n                break;\n            case 80: // ctrl-p\n                if (e.ctrlKey)\n                    return \"UP\";\n                break;\n        }\n        return \"OTHER\";\n    }\n}\nexports.Editor = Editor;\n//# sourceMappingURL=Editor.js.map\n\n//# sourceURL=webpack://hanfor/./node_modules/@textcomplete/core/dist/Editor.js?");

/***/ }),

/***/ "./node_modules/@textcomplete/core/dist/SearchResult.js":
/*!**************************************************************!*\
  !*** ./node_modules/@textcomplete/core/dist/SearchResult.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SearchResult = void 0;\nconst MAIN = /\\$&/g;\nconst PLACE = /\\$(\\d)/g;\nclass SearchResult {\n    constructor(data, term, strategy) {\n        this.data = data;\n        this.term = term;\n        this.strategy = strategy;\n    }\n    getReplacementData(beforeCursor) {\n        let result = this.strategy.replace(this.data);\n        if (result == null)\n            return null;\n        let afterCursor = \"\";\n        if (Array.isArray(result)) {\n            afterCursor = result[1];\n            result = result[0];\n        }\n        const match = this.strategy.match(beforeCursor);\n        if (match == null || match.index == null)\n            return null;\n        const replacement = result\n            .replace(MAIN, match[0])\n            .replace(PLACE, (_, p) => match[parseInt(p)]);\n        return {\n            start: match.index,\n            end: match.index + match[0].length,\n            beforeCursor: replacement,\n            afterCursor: afterCursor,\n        };\n    }\n    replace(beforeCursor, afterCursor) {\n        const replacement = this.getReplacementData(beforeCursor);\n        if (replacement === null)\n            return;\n        afterCursor = replacement.afterCursor + afterCursor;\n        return [\n            [\n                beforeCursor.slice(0, replacement.start),\n                replacement.beforeCursor,\n                beforeCursor.slice(replacement.end),\n            ].join(\"\"),\n            afterCursor,\n        ];\n    }\n    render() {\n        return this.strategy.renderTemplate(this.data, this.term);\n    }\n    getStrategyId() {\n        return this.strategy.getId();\n    }\n}\nexports.SearchResult = SearchResult;\n//# sourceMappingURL=SearchResult.js.map\n\n//# sourceURL=webpack://hanfor/./node_modules/@textcomplete/core/dist/SearchResult.js?");

/***/ }),

/***/ "./node_modules/@textcomplete/core/dist/Strategy.js":
/*!**********************************************************!*\
  !*** ./node_modules/@textcomplete/core/dist/Strategy.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Strategy = exports.DEFAULT_INDEX = void 0;\nconst SearchResult_1 = __webpack_require__(/*! ./SearchResult */ \"./node_modules/@textcomplete/core/dist/SearchResult.js\");\nexports.DEFAULT_INDEX = 1;\nclass Strategy {\n    constructor(props) {\n        this.props = props;\n        this.cache = {};\n    }\n    destroy() {\n        this.cache = {};\n        return this;\n    }\n    replace(data) {\n        return this.props.replace(data);\n    }\n    execute(beforeCursor, callback) {\n        var _a;\n        const match = this.matchWithContext(beforeCursor);\n        if (!match)\n            return false;\n        const term = match[(_a = this.props.index) !== null && _a !== void 0 ? _a : exports.DEFAULT_INDEX];\n        this.search(term, (results) => {\n            callback(results.map((result) => new SearchResult_1.SearchResult(result, term, this)));\n        }, match);\n        return true;\n    }\n    renderTemplate(data, term) {\n        if (this.props.template) {\n            return this.props.template(data, term);\n        }\n        if (typeof data === \"string\")\n            return data;\n        throw new Error(`Unexpected render data type: ${typeof data}. Please implement template parameter by yourself`);\n    }\n    getId() {\n        return this.props.id || null;\n    }\n    match(text) {\n        return typeof this.props.match === \"function\"\n            ? this.props.match(text)\n            : text.match(this.props.match);\n    }\n    search(term, callback, match) {\n        if (this.props.cache) {\n            this.searchWithCach(term, callback, match);\n        }\n        else {\n            this.props.search(term, callback, match);\n        }\n    }\n    matchWithContext(beforeCursor) {\n        const context = this.context(beforeCursor);\n        if (context === false)\n            return null;\n        return this.match(context === true ? beforeCursor : context);\n    }\n    context(beforeCursor) {\n        return this.props.context ? this.props.context(beforeCursor) : true;\n    }\n    searchWithCach(term, callback, match) {\n        if (this.cache[term] != null) {\n            callback(this.cache[term]);\n        }\n        else {\n            this.props.search(term, (results) => {\n                this.cache[term] = results;\n                callback(results);\n            }, match);\n        }\n    }\n}\nexports.Strategy = Strategy;\n//# sourceMappingURL=Strategy.js.map\n\n//# sourceURL=webpack://hanfor/./node_modules/@textcomplete/core/dist/Strategy.js?");

/***/ }),

/***/ "./node_modules/@textcomplete/core/dist/Textcomplete.js":
/*!**************************************************************!*\
  !*** ./node_modules/@textcomplete/core/dist/Textcomplete.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Textcomplete = void 0;\nconst eventemitter3_1 = __webpack_require__(/*! eventemitter3 */ \"./node_modules/eventemitter3/index.js\");\nconst Dropdown_1 = __webpack_require__(/*! ./Dropdown */ \"./node_modules/@textcomplete/core/dist/Dropdown.js\");\nconst Completer_1 = __webpack_require__(/*! ./Completer */ \"./node_modules/@textcomplete/core/dist/Completer.js\");\nconst PASSTHOUGH_EVENT_NAMES = [\n    \"show\",\n    \"shown\",\n    \"render\",\n    \"rendered\",\n    \"selected\",\n    \"hidden\",\n    \"hide\",\n];\nclass Textcomplete extends eventemitter3_1.EventEmitter {\n    constructor(editor, strategies, option) {\n        super();\n        this.editor = editor;\n        this.isQueryInFlight = false;\n        this.nextPendingQuery = null;\n        this.handleHit = ({ searchResults, }) => {\n            if (searchResults.length) {\n                this.dropdown.render(searchResults, this.editor.getCursorOffset());\n            }\n            else {\n                this.dropdown.hide();\n            }\n            this.isQueryInFlight = false;\n            if (this.nextPendingQuery !== null)\n                this.trigger(this.nextPendingQuery);\n        };\n        this.handleMove = (e) => {\n            e.detail.code === \"UP\" ? this.dropdown.up(e) : this.dropdown.down(e);\n        };\n        this.handleEnter = (e) => {\n            const activeItem = this.dropdown.getActiveItem();\n            if (activeItem) {\n                this.dropdown.select(activeItem);\n                e.preventDefault();\n            }\n            else {\n                this.dropdown.hide();\n            }\n        };\n        this.handleEsc = (e) => {\n            if (this.dropdown.isShown()) {\n                this.dropdown.hide();\n                e.preventDefault();\n            }\n        };\n        this.handleChange = (e) => {\n            if (e.detail.beforeCursor != null) {\n                this.trigger(e.detail.beforeCursor);\n            }\n            else {\n                this.dropdown.hide();\n            }\n        };\n        this.handleSelect = (selectEvent) => {\n            this.emit(\"select\", selectEvent);\n            if (!selectEvent.defaultPrevented) {\n                this.editor.applySearchResult(selectEvent.detail.searchResult);\n            }\n        };\n        this.handleResize = () => {\n            if (this.dropdown.isShown()) {\n                this.dropdown.setOffset(this.editor.getCursorOffset());\n            }\n        };\n        this.completer = new Completer_1.Completer(strategies);\n        this.dropdown = Dropdown_1.Dropdown.create((option === null || option === void 0 ? void 0 : option.dropdown) || {});\n        this.startListening();\n    }\n    destroy(destroyEditor = true) {\n        this.completer.destroy();\n        this.dropdown.destroy();\n        if (destroyEditor)\n            this.editor.destroy();\n        this.stopListening();\n        return this;\n    }\n    isShown() {\n        return this.dropdown.isShown();\n    }\n    hide() {\n        this.dropdown.hide();\n        return this;\n    }\n    trigger(beforeCursor) {\n        if (this.isQueryInFlight) {\n            this.nextPendingQuery = beforeCursor;\n        }\n        else {\n            this.isQueryInFlight = true;\n            this.nextPendingQuery = null;\n            this.completer.run(beforeCursor);\n        }\n        return this;\n    }\n    startListening() {\n        var _a;\n        this.editor\n            .on(\"move\", this.handleMove)\n            .on(\"enter\", this.handleEnter)\n            .on(\"esc\", this.handleEsc)\n            .on(\"change\", this.handleChange);\n        this.dropdown.on(\"select\", this.handleSelect);\n        for (const eventName of PASSTHOUGH_EVENT_NAMES) {\n            this.dropdown.on(eventName, (e) => this.emit(eventName, e));\n        }\n        this.completer.on(\"hit\", this.handleHit);\n        (_a = this.dropdown.el.ownerDocument.defaultView) === null || _a === void 0 ? void 0 : _a.addEventListener(\"resize\", this.handleResize);\n    }\n    stopListening() {\n        var _a;\n        (_a = this.dropdown.el.ownerDocument.defaultView) === null || _a === void 0 ? void 0 : _a.removeEventListener(\"resize\", this.handleResize);\n        this.completer.removeAllListeners();\n        this.dropdown.removeAllListeners();\n        this.editor\n            .removeListener(\"move\", this.handleMove)\n            .removeListener(\"enter\", this.handleEnter)\n            .removeListener(\"esc\", this.handleEsc)\n            .removeListener(\"change\", this.handleChange);\n    }\n}\nexports.Textcomplete = Textcomplete;\n//# sourceMappingURL=Textcomplete.js.map\n\n//# sourceURL=webpack://hanfor/./node_modules/@textcomplete/core/dist/Textcomplete.js?");

/***/ }),

/***/ "./node_modules/@textcomplete/core/dist/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/@textcomplete/core/dist/index.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./Completer */ \"./node_modules/@textcomplete/core/dist/Completer.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Dropdown */ \"./node_modules/@textcomplete/core/dist/Dropdown.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Editor */ \"./node_modules/@textcomplete/core/dist/Editor.js\"), exports);\n__exportStar(__webpack_require__(/*! ./SearchResult */ \"./node_modules/@textcomplete/core/dist/SearchResult.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Strategy */ \"./node_modules/@textcomplete/core/dist/Strategy.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Textcomplete */ \"./node_modules/@textcomplete/core/dist/Textcomplete.js\"), exports);\n__exportStar(__webpack_require__(/*! ./utils */ \"./node_modules/@textcomplete/core/dist/utils.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://hanfor/./node_modules/@textcomplete/core/dist/index.js?");

/***/ }),

/***/ "./node_modules/@textcomplete/core/dist/utils.js":
/*!*******************************************************!*\
  !*** ./node_modules/@textcomplete/core/dist/utils.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createCustomEvent = void 0;\nconst isCustomEventSupported = typeof window !== \"undefined\" && !!window.CustomEvent;\nconst createCustomEvent = (type, options) => {\n    if (isCustomEventSupported)\n        return new CustomEvent(type, options);\n    const event = document.createEvent(\"CustomEvent\");\n    event.initCustomEvent(type, \n    /* bubbles */ false, (options === null || options === void 0 ? void 0 : options.cancelable) || false, (options === null || options === void 0 ? void 0 : options.detail) || undefined);\n    return event;\n};\nexports.createCustomEvent = createCustomEvent;\n//# sourceMappingURL=utils.js.map\n\n//# sourceURL=webpack://hanfor/./node_modules/@textcomplete/core/dist/utils.js?");

/***/ }),

/***/ "./node_modules/@textcomplete/textarea/dist/TextareaEditor.js":
/*!********************************************************************!*\
  !*** ./node_modules/@textcomplete/textarea/dist/TextareaEditor.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TextareaEditor = void 0;\nconst undate_1 = __webpack_require__(/*! undate */ \"./node_modules/undate/dist/index.mjs\");\nconst textarea_caret_1 = __importDefault(__webpack_require__(/*! textarea-caret */ \"./node_modules/textarea-caret/index.js\"));\nconst core_1 = __webpack_require__(/*! @textcomplete/core */ \"./node_modules/@textcomplete/core/dist/index.js\");\nconst utils_1 = __webpack_require__(/*! @textcomplete/utils */ \"./node_modules/@textcomplete/utils/dist/index.js\");\nclass TextareaEditor extends core_1.Editor {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.onInput = () => {\n            this.emitChangeEvent();\n        };\n        this.onKeydown = (e) => {\n            const code = this.getCode(e);\n            let event;\n            if (code === \"UP\" || code === \"DOWN\") {\n                event = this.emitMoveEvent(code);\n            }\n            else if (code === \"ENTER\") {\n                event = this.emitEnterEvent();\n            }\n            else if (code === \"ESC\") {\n                event = this.emitEscEvent();\n            }\n            if (event && event.defaultPrevented) {\n                e.preventDefault();\n            }\n        };\n        this.startListening();\n    }\n    destroy() {\n        super.destroy();\n        this.stopListening();\n        return this;\n    }\n    /**\n     * @implements {@link Editor#applySearchResult}\n     */\n    applySearchResult(searchResult) {\n        const beforeCursor = this.getBeforeCursor();\n        if (beforeCursor != null) {\n            const replace = searchResult.replace(beforeCursor, this.getAfterCursor());\n            this.el.focus(); // Clicking a dropdown item removes focus from the element.\n            if (Array.isArray(replace)) {\n                (0, undate_1.update)(this.el, replace[0], replace[1]);\n                if (this.el) {\n                    this.el.dispatchEvent((0, core_1.createCustomEvent)(\"input\"));\n                }\n            }\n        }\n    }\n    /**\n     * @implements {@link Editor#getCursorOffset}\n     */\n    getCursorOffset() {\n        const elOffset = (0, utils_1.calculateElementOffset)(this.el);\n        const elScroll = this.getElScroll();\n        const cursorPosition = this.getCursorPosition();\n        const lineHeight = (0, utils_1.getLineHeightPx)(this.el);\n        const top = elOffset.top - elScroll.top + cursorPosition.top + lineHeight;\n        const left = elOffset.left - elScroll.left + cursorPosition.left;\n        const clientTop = this.el.getBoundingClientRect().top;\n        if (this.el.dir !== \"rtl\") {\n            return { top, left, lineHeight, clientTop };\n        }\n        else {\n            const right = document.documentElement\n                ? document.documentElement.clientWidth - left\n                : 0;\n            return { top, right, lineHeight, clientTop };\n        }\n    }\n    /**\n     * @implements {@link Editor#getBeforeCursor}\n     */\n    getBeforeCursor() {\n        return this.el.selectionStart !== this.el.selectionEnd\n            ? null\n            : this.el.value.substring(0, this.el.selectionEnd);\n    }\n    getAfterCursor() {\n        return this.el.value.substring(this.el.selectionEnd);\n    }\n    getElScroll() {\n        return { top: this.el.scrollTop, left: this.el.scrollLeft };\n    }\n    /**\n     * The input cursor's relative coordinates from the textarea's left\n     * top corner.\n     */\n    getCursorPosition() {\n        return (0, textarea_caret_1.default)(this.el, this.el.selectionEnd);\n    }\n    startListening() {\n        this.el.addEventListener(\"input\", this.onInput);\n        this.el.addEventListener(\"keydown\", this.onKeydown);\n    }\n    stopListening() {\n        this.el.removeEventListener(\"input\", this.onInput);\n        this.el.removeEventListener(\"keydown\", this.onKeydown);\n    }\n}\nexports.TextareaEditor = TextareaEditor;\n//# sourceMappingURL=TextareaEditor.js.map\n\n//# sourceURL=webpack://hanfor/./node_modules/@textcomplete/textarea/dist/TextareaEditor.js?");

/***/ }),

/***/ "./node_modules/@textcomplete/textarea/dist/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@textcomplete/textarea/dist/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TextareaEditor = void 0;\nvar TextareaEditor_1 = __webpack_require__(/*! ./TextareaEditor */ \"./node_modules/@textcomplete/textarea/dist/TextareaEditor.js\");\nObject.defineProperty(exports, \"TextareaEditor\", ({ enumerable: true, get: function () { return TextareaEditor_1.TextareaEditor; } }));\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://hanfor/./node_modules/@textcomplete/textarea/dist/index.js?");

/***/ }),

/***/ "./node_modules/@textcomplete/utils/dist/calculateElementOffset.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@textcomplete/utils/dist/calculateElementOffset.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.calculateElementOffset = void 0;\n/**\n * Get the current coordinates of the `el` relative to the document.\n */\nconst calculateElementOffset = (el) => {\n    const rect = el.getBoundingClientRect();\n    const owner = el.ownerDocument;\n    if (owner == null) {\n        throw new Error(\"Given element does not belong to document\");\n    }\n    const { defaultView, documentElement } = owner;\n    if (defaultView == null) {\n        throw new Error(\"Given element does not belong to window\");\n    }\n    const offset = {\n        top: rect.top + defaultView.pageYOffset,\n        left: rect.left + defaultView.pageXOffset,\n    };\n    if (documentElement) {\n        offset.top -= documentElement.clientTop;\n        offset.left -= documentElement.clientLeft;\n    }\n    return offset;\n};\nexports.calculateElementOffset = calculateElementOffset;\n//# sourceMappingURL=calculateElementOffset.js.map\n\n//# sourceURL=webpack://hanfor/./node_modules/@textcomplete/utils/dist/calculateElementOffset.js?");

/***/ }),

/***/ "./node_modules/@textcomplete/utils/dist/getLineHeightPx.js":
/*!******************************************************************!*\
  !*** ./node_modules/@textcomplete/utils/dist/getLineHeightPx.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getLineHeightPx = void 0;\nconst CHAR_CODE_ZERO = \"0\".charCodeAt(0);\nconst CHAR_CODE_NINE = \"9\".charCodeAt(0);\nconst isDigit = (charCode) => CHAR_CODE_ZERO <= charCode && charCode <= CHAR_CODE_NINE;\nconst getLineHeightPx = (el) => {\n    const computedStyle = getComputedStyle(el);\n    const lineHeight = computedStyle.lineHeight;\n    // If the char code starts with a digit, it is either a value in pixels,\n    // or unitless, as per:\n    // https://drafts.csswg.org/css2/visudet.html#propdef-line-height\n    // https://drafts.csswg.org/css2/cascade.html#computed-value\n    if (isDigit(lineHeight.charCodeAt(0))) {\n        const floatLineHeight = parseFloat(lineHeight);\n        // In real browsers the value is *always* in pixels, even for unit-less\n        // line-heights. However, we still check as per the spec.\n        return isDigit(lineHeight.charCodeAt(lineHeight.length - 1))\n            ? floatLineHeight * parseFloat(computedStyle.fontSize)\n            : floatLineHeight;\n    }\n    // Otherwise, the value is \"normal\".\n    // If the line-height is \"normal\", calculate by font-size\n    return calculateLineHeightPx(el.nodeName, computedStyle);\n};\nexports.getLineHeightPx = getLineHeightPx;\n/**\n * Returns calculated line-height of the given node in pixels.\n */\nconst calculateLineHeightPx = (nodeName, computedStyle) => {\n    const body = document.body;\n    if (!body)\n        return 0;\n    const tempNode = document.createElement(nodeName);\n    tempNode.innerHTML = \"&nbsp;\";\n    Object.assign(tempNode.style, {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        padding: \"0\",\n    });\n    body.appendChild(tempNode);\n    // Make sure textarea has only 1 row\n    if (tempNode instanceof HTMLTextAreaElement) {\n        tempNode.rows = 1;\n    }\n    // Assume the height of the element is the line-height\n    const height = tempNode.offsetHeight;\n    body.removeChild(tempNode);\n    return height;\n};\n//# sourceMappingURL=getLineHeightPx.js.map\n\n//# sourceURL=webpack://hanfor/./node_modules/@textcomplete/utils/dist/getLineHeightPx.js?");

/***/ }),

/***/ "./node_modules/@textcomplete/utils/dist/index.js":
/*!********************************************************!*\
  !*** ./node_modules/@textcomplete/utils/dist/index.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./calculateElementOffset */ \"./node_modules/@textcomplete/utils/dist/calculateElementOffset.js\"), exports);\n__exportStar(__webpack_require__(/*! ./getLineHeightPx */ \"./node_modules/@textcomplete/utils/dist/getLineHeightPx.js\"), exports);\n__exportStar(__webpack_require__(/*! ./isSafari */ \"./node_modules/@textcomplete/utils/dist/isSafari.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://hanfor/./node_modules/@textcomplete/utils/dist/index.js?");

/***/ }),

/***/ "./node_modules/@textcomplete/utils/dist/isSafari.js":
/*!***********************************************************!*\
  !*** ./node_modules/@textcomplete/utils/dist/isSafari.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isSafari = void 0;\nconst isSafari = () => /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\nexports.isSafari = isSafari;\n//# sourceMappingURL=isSafari.js.map\n\n//# sourceURL=webpack://hanfor/./node_modules/@textcomplete/utils/dist/isSafari.js?");

/***/ }),

/***/ "./node_modules/eventemitter3/index.js":
/*!*********************************************!*\
  !*** ./node_modules/eventemitter3/index.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif (true) {\n  module.exports = EventEmitter;\n}\n\n\n//# sourceURL=webpack://hanfor/./node_modules/eventemitter3/index.js?");

/***/ }),

/***/ "./node_modules/fuse.js/dist/fuse.js":
/*!*******************************************!*\
  !*** ./node_modules/fuse.js/dist/fuse.js ***!
  \*******************************************/
/***/ (function(module) {

eval("/*!\n * Fuse.js v3.6.1 - Lightweight fuzzy-search (http://fusejs.io)\n * \n * Copyright (c) 2012-2017 Kirollos Risk (http://kiro.me)\n * All Rights Reserved. Apache Software License 2.0\n * \n * http://www.apache.org/licenses/LICENSE-2.0\n */\n!function(e,t){ true?module.exports=t():0}(this,function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=0)}([function(e,t,r){function n(e){return(n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function o(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var i=r(1),a=r(7),s=a.get,c=(a.deepValue,a.isArray),h=function(){function e(t,r){var n=r.location,o=void 0===n?0:n,i=r.distance,a=void 0===i?100:i,c=r.threshold,h=void 0===c?.6:c,l=r.maxPatternLength,u=void 0===l?32:l,f=r.caseSensitive,v=void 0!==f&&f,p=r.tokenSeparator,d=void 0===p?/ +/g:p,g=r.findAllMatches,y=void 0!==g&&g,m=r.minMatchCharLength,k=void 0===m?1:m,b=r.id,S=void 0===b?null:b,x=r.keys,M=void 0===x?[]:x,_=r.shouldSort,w=void 0===_||_,L=r.getFn,A=void 0===L?s:L,O=r.sortFn,C=void 0===O?function(e,t){return e.score-t.score}:O,j=r.tokenize,P=void 0!==j&&j,I=r.matchAllTokens,F=void 0!==I&&I,T=r.includeMatches,N=void 0!==T&&T,z=r.includeScore,E=void 0!==z&&z,W=r.verbose,K=void 0!==W&&W;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.options={location:o,distance:a,threshold:h,maxPatternLength:u,isCaseSensitive:v,tokenSeparator:d,findAllMatches:y,minMatchCharLength:k,id:S,keys:M,includeMatches:N,includeScore:E,shouldSort:w,getFn:A,sortFn:C,verbose:K,tokenize:P,matchAllTokens:F},this.setCollection(t),this._processKeys(M)}var t,r,a;return t=e,(r=[{key:\"setCollection\",value:function(e){return this.list=e,e}},{key:\"_processKeys\",value:function(e){if(this._keyWeights={},this._keyNames=[],e.length&&\"string\"==typeof e[0])for(var t=0,r=e.length;t<r;t+=1){var n=e[t];this._keyWeights[n]=1,this._keyNames.push(n)}else{for(var o=null,i=null,a=0,s=0,c=e.length;s<c;s+=1){var h=e[s];if(!h.hasOwnProperty(\"name\"))throw new Error('Missing \"name\" property in key object');var l=h.name;if(this._keyNames.push(l),!h.hasOwnProperty(\"weight\"))throw new Error('Missing \"weight\" property in key object');var u=h.weight;if(u<0||u>1)throw new Error('\"weight\" property in key must bein the range of [0, 1)');i=null==i?u:Math.max(i,u),o=null==o?u:Math.min(o,u),this._keyWeights[l]=u,a+=u}if(a>1)throw new Error(\"Total of weights cannot exceed 1\")}}},{key:\"search\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{limit:!1};this._log('---------\\nSearch pattern: \"'.concat(e,'\"'));var r=this._prepareSearchers(e),n=r.tokenSearchers,o=r.fullSearcher,i=this._search(n,o);return this._computeScore(i),this.options.shouldSort&&this._sort(i),t.limit&&\"number\"==typeof t.limit&&(i=i.slice(0,t.limit)),this._format(i)}},{key:\"_prepareSearchers\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\",t=[];if(this.options.tokenize)for(var r=e.split(this.options.tokenSeparator),n=0,o=r.length;n<o;n+=1)t.push(new i(r[n],this.options));return{tokenSearchers:t,fullSearcher:new i(e,this.options)}}},{key:\"_search\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1?arguments[1]:void 0,r=this.list,n={},o=[];if(\"string\"==typeof r[0]){for(var i=0,a=r.length;i<a;i+=1)this._analyze({key:\"\",value:r[i],record:i,index:i},{resultMap:n,results:o,tokenSearchers:e,fullSearcher:t});return o}for(var s=0,c=r.length;s<c;s+=1)for(var h=r[s],l=0,u=this._keyNames.length;l<u;l+=1){var f=this._keyNames[l];this._analyze({key:f,value:this.options.getFn(h,f),record:h,index:s},{resultMap:n,results:o,tokenSearchers:e,fullSearcher:t})}return o}},{key:\"_analyze\",value:function(e,t){var r=this,n=e.key,o=e.arrayIndex,i=void 0===o?-1:o,a=e.value,s=e.record,h=e.index,l=t.tokenSearchers,u=void 0===l?[]:l,f=t.fullSearcher,v=t.resultMap,p=void 0===v?{}:v,d=t.results,g=void 0===d?[]:d;!function e(t,o,i,a){if(null!=o)if(\"string\"==typeof o){var s=!1,h=-1,l=0;r._log(\"\\nKey: \".concat(\"\"===n?\"--\":n));var v=f.search(o);if(r._log('Full text: \"'.concat(o,'\", score: ').concat(v.score)),r.options.tokenize){for(var d=o.split(r.options.tokenSeparator),y=d.length,m=[],k=0,b=u.length;k<b;k+=1){var S=u[k];r._log('\\nPattern: \"'.concat(S.pattern,'\"'));for(var x=!1,M=0;M<y;M+=1){var _=d[M],w=S.search(_),L={};w.isMatch?(L[_]=w.score,s=!0,x=!0,m.push(w.score)):(L[_]=1,r.options.matchAllTokens||m.push(1)),r._log('Token: \"'.concat(_,'\", score: ').concat(L[_]))}x&&(l+=1)}h=m[0];for(var A=m.length,O=1;O<A;O+=1)h+=m[O];h/=A,r._log(\"Token score average:\",h)}var C=v.score;h>-1&&(C=(C+h)/2),r._log(\"Score average:\",C);var j=!r.options.tokenize||!r.options.matchAllTokens||l>=u.length;if(r._log(\"\\nCheck Matches: \".concat(j)),(s||v.isMatch)&&j){var P={key:n,arrayIndex:t,value:o,score:C};r.options.includeMatches&&(P.matchedIndices=v.matchedIndices);var I=p[a];I?I.output.push(P):(p[a]={item:i,output:[P]},g.push(p[a]))}}else if(c(o))for(var F=0,T=o.length;F<T;F+=1)e(F,o[F],i,a)}(i,a,s,h)}},{key:\"_computeScore\",value:function(e){this._log(\"\\n\\nComputing score:\\n\");for(var t=this._keyWeights,r=!!Object.keys(t).length,n=0,o=e.length;n<o;n+=1){for(var i=e[n],a=i.output,s=a.length,c=1,h=0;h<s;h+=1){var l=a[h],u=l.key,f=r?t[u]:1,v=0===l.score&&t&&t[u]>0?Number.EPSILON:l.score;c*=Math.pow(v,f)}i.score=c,this._log(i)}}},{key:\"_sort\",value:function(e){this._log(\"\\n\\nSorting....\"),e.sort(this.options.sortFn)}},{key:\"_format\",value:function(e){var t=[];if(this.options.verbose){var r=[];this._log(\"\\n\\nOutput:\\n\\n\",JSON.stringify(e,function(e,t){if(\"object\"===n(t)&&null!==t){if(-1!==r.indexOf(t))return;r.push(t)}return t},2)),r=null}var o=[];this.options.includeMatches&&o.push(function(e,t){var r=e.output;t.matches=[];for(var n=0,o=r.length;n<o;n+=1){var i=r[n];if(0!==i.matchedIndices.length){var a={indices:i.matchedIndices,value:i.value};i.key&&(a.key=i.key),i.hasOwnProperty(\"arrayIndex\")&&i.arrayIndex>-1&&(a.arrayIndex=i.arrayIndex),t.matches.push(a)}}}),this.options.includeScore&&o.push(function(e,t){t.score=e.score});for(var i=0,a=e.length;i<a;i+=1){var s=e[i];if(this.options.id&&(s.item=this.options.getFn(s.item,this.options.id)[0]),o.length){for(var c={item:s.item},h=0,l=o.length;h<l;h+=1)o[h](s,c);t.push(c)}else t.push(s.item)}return t}},{key:\"_log\",value:function(){var e;this.options.verbose&&(e=console).log.apply(e,arguments)}}])&&o(t.prototype,r),a&&o(t,a),e}();e.exports=h},function(e,t,r){function n(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var o=r(2),i=r(3),a=r(6),s=function(){function e(t,r){var n=r.location,o=void 0===n?0:n,i=r.distance,s=void 0===i?100:i,c=r.threshold,h=void 0===c?.6:c,l=r.maxPatternLength,u=void 0===l?32:l,f=r.isCaseSensitive,v=void 0!==f&&f,p=r.tokenSeparator,d=void 0===p?/ +/g:p,g=r.findAllMatches,y=void 0!==g&&g,m=r.minMatchCharLength,k=void 0===m?1:m,b=r.includeMatches,S=void 0!==b&&b;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.options={location:o,distance:s,threshold:h,maxPatternLength:u,isCaseSensitive:v,tokenSeparator:d,findAllMatches:y,includeMatches:S,minMatchCharLength:k},this.pattern=v?t:t.toLowerCase(),this.pattern.length<=u&&(this.patternAlphabet=a(this.pattern))}var t,r,s;return t=e,(r=[{key:\"search\",value:function(e){var t=this.options,r=t.isCaseSensitive,n=t.includeMatches;if(r||(e=e.toLowerCase()),this.pattern===e){var a={isMatch:!0,score:0};return n&&(a.matchedIndices=[[0,e.length-1]]),a}var s=this.options,c=s.maxPatternLength,h=s.tokenSeparator;if(this.pattern.length>c)return o(e,this.pattern,h);var l=this.options,u=l.location,f=l.distance,v=l.threshold,p=l.findAllMatches,d=l.minMatchCharLength;return i(e,this.pattern,this.patternAlphabet,{location:u,distance:f,threshold:v,findAllMatches:p,minMatchCharLength:d,includeMatches:n})}}])&&n(t.prototype,r),s&&n(t,s),e}();e.exports=s},function(e,t){var r=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;e.exports=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:/ +/g,o=new RegExp(t.replace(r,\"\\\\$&\").replace(n,\"|\")),i=e.match(o),a=!!i,s=[];if(a)for(var c=0,h=i.length;c<h;c+=1){var l=i[c];s.push([e.indexOf(l),l.length-1])}return{score:a?.5:1,isMatch:a,matchedIndices:s}}},function(e,t,r){var n=r(4),o=r(5);e.exports=function(e,t,r,i){for(var a=i.location,s=void 0===a?0:a,c=i.distance,h=void 0===c?100:c,l=i.threshold,u=void 0===l?.6:l,f=i.findAllMatches,v=void 0!==f&&f,p=i.minMatchCharLength,d=void 0===p?1:p,g=i.includeMatches,y=void 0!==g&&g,m=s,k=e.length,b=u,S=e.indexOf(t,m),x=t.length,M=[],_=0;_<k;_+=1)M[_]=0;if(-1!==S){var w=n(t,{errors:0,currentLocation:S,expectedLocation:m,distance:h});if(b=Math.min(w,b),-1!==(S=e.lastIndexOf(t,m+x))){var L=n(t,{errors:0,currentLocation:S,expectedLocation:m,distance:h});b=Math.min(L,b)}}S=-1;for(var A=[],O=1,C=x+k,j=1<<(x<=31?x-1:30),P=0;P<x;P+=1){for(var I=0,F=C;I<F;){n(t,{errors:P,currentLocation:m+F,expectedLocation:m,distance:h})<=b?I=F:C=F,F=Math.floor((C-I)/2+I)}C=F;var T=Math.max(1,m-F+1),N=v?k:Math.min(m+F,k)+x,z=Array(N+2);z[N+1]=(1<<P)-1;for(var E=N;E>=T;E-=1){var W=E-1,K=r[e.charAt(W)];if(K&&(M[W]=1),z[E]=(z[E+1]<<1|1)&K,0!==P&&(z[E]|=(A[E+1]|A[E])<<1|1|A[E+1]),z[E]&j&&(O=n(t,{errors:P,currentLocation:W,expectedLocation:m,distance:h}))<=b){if(b=O,(S=W)<=m)break;T=Math.max(1,2*m-S)}}if(n(t,{errors:P+1,currentLocation:m,expectedLocation:m,distance:h})>b)break;A=z}var $={isMatch:S>=0,score:0===O?.001:O};return y&&($.matchedIndices=o(M,d)),$}},function(e,t){e.exports=function(e,t){var r=t.errors,n=void 0===r?0:r,o=t.currentLocation,i=void 0===o?0:o,a=t.expectedLocation,s=void 0===a?0:a,c=t.distance,h=void 0===c?100:c,l=n/e.length,u=Math.abs(s-i);return h?l+u/h:u?1:l}},function(e,t){e.exports=function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,r=[],n=-1,o=-1,i=0,a=e.length;i<a;i+=1){var s=e[i];s&&-1===n?n=i:s||-1===n||((o=i-1)-n+1>=t&&r.push([n,o]),n=-1)}return e[i-1]&&i-n>=t&&r.push([n,i-1]),r}},function(e,t){e.exports=function(e){for(var t={},r=e.length,n=0;n<r;n+=1)t[e.charAt(n)]=0;for(var o=0;o<r;o+=1)t[e.charAt(o)]|=1<<r-o-1;return t}},function(e,t){var r=function(e){return Array.isArray?Array.isArray(e):\"[object Array]\"===Object.prototype.toString.call(e)},n=function(e){return null==e?\"\":function(e){if(\"string\"==typeof e)return e;var t=e+\"\";return\"0\"==t&&1/e==-1/0?\"-0\":t}(e)},o=function(e){return\"string\"==typeof e},i=function(e){return\"number\"==typeof e};e.exports={get:function(e,t){var a=[];return function e(t,s){if(s){var c=s.indexOf(\".\"),h=s,l=null;-1!==c&&(h=s.slice(0,c),l=s.slice(c+1));var u=t[h];if(null!=u)if(l||!o(u)&&!i(u))if(r(u))for(var f=0,v=u.length;f<v;f+=1)e(u[f],l);else l&&e(u,l);else a.push(n(u))}else a.push(t)}(e,t),a},isArray:r,isString:o,isNum:i,toString:n}}])});\n\n//# sourceURL=webpack://hanfor/./node_modules/fuse.js/dist/fuse.js?");

/***/ }),

/***/ "./node_modules/textarea-caret/index.js":
/*!**********************************************!*\
  !*** ./node_modules/textarea-caret/index.js ***!
  \**********************************************/
/***/ ((module) => {

eval("/* jshint browser: true */\n\n(function () {\n\n// We'll copy the properties below into the mirror div.\n// Note that some browsers, such as Firefox, do not concatenate properties\n// into their shorthand (e.g. padding-top, padding-bottom etc. -> padding),\n// so we have to list every single property explicitly.\nvar properties = [\n  'direction',  // RTL support\n  'boxSizing',\n  'width',  // on Chrome and IE, exclude the scrollbar, so the mirror div wraps exactly as the textarea does\n  'height',\n  'overflowX',\n  'overflowY',  // copy the scrollbar for IE\n\n  'borderTopWidth',\n  'borderRightWidth',\n  'borderBottomWidth',\n  'borderLeftWidth',\n  'borderStyle',\n\n  'paddingTop',\n  'paddingRight',\n  'paddingBottom',\n  'paddingLeft',\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/font\n  'fontStyle',\n  'fontVariant',\n  'fontWeight',\n  'fontStretch',\n  'fontSize',\n  'fontSizeAdjust',\n  'lineHeight',\n  'fontFamily',\n\n  'textAlign',\n  'textTransform',\n  'textIndent',\n  'textDecoration',  // might not make a difference, but better be safe\n\n  'letterSpacing',\n  'wordSpacing',\n\n  'tabSize',\n  'MozTabSize'\n\n];\n\nvar isBrowser = (typeof window !== 'undefined');\nvar isFirefox = (isBrowser && window.mozInnerScreenX != null);\n\nfunction getCaretCoordinates(element, position, options) {\n  if (!isBrowser) {\n    throw new Error('textarea-caret-position#getCaretCoordinates should only be called in a browser');\n  }\n\n  var debug = options && options.debug || false;\n  if (debug) {\n    var el = document.querySelector('#input-textarea-caret-position-mirror-div');\n    if (el) el.parentNode.removeChild(el);\n  }\n\n  // The mirror div will replicate the textarea's style\n  var div = document.createElement('div');\n  div.id = 'input-textarea-caret-position-mirror-div';\n  document.body.appendChild(div);\n\n  var style = div.style;\n  var computed = window.getComputedStyle ? window.getComputedStyle(element) : element.currentStyle;  // currentStyle for IE < 9\n  var isInput = element.nodeName === 'INPUT';\n\n  // Default textarea styles\n  style.whiteSpace = 'pre-wrap';\n  if (!isInput)\n    style.wordWrap = 'break-word';  // only for textarea-s\n\n  // Position off-screen\n  style.position = 'absolute';  // required to return coordinates properly\n  if (!debug)\n    style.visibility = 'hidden';  // not 'display: none' because we want rendering\n\n  // Transfer the element's properties to the div\n  properties.forEach(function (prop) {\n    if (isInput && prop === 'lineHeight') {\n      // Special case for <input>s because text is rendered centered and line height may be != height\n      style.lineHeight = computed.height;\n    } else {\n      style[prop] = computed[prop];\n    }\n  });\n\n  if (isFirefox) {\n    // Firefox lies about the overflow property for textareas: https://bugzilla.mozilla.org/show_bug.cgi?id=984275\n    if (element.scrollHeight > parseInt(computed.height))\n      style.overflowY = 'scroll';\n  } else {\n    style.overflow = 'hidden';  // for Chrome to not render a scrollbar; IE keeps overflowY = 'scroll'\n  }\n\n  div.textContent = element.value.substring(0, position);\n  // The second special handling for input type=\"text\" vs textarea:\n  // spaces need to be replaced with non-breaking spaces - http://stackoverflow.com/a/13402035/1269037\n  if (isInput)\n    div.textContent = div.textContent.replace(/\\s/g, '\\u00a0');\n\n  var span = document.createElement('span');\n  // Wrapping must be replicated *exactly*, including when a long word gets\n  // onto the next line, with whitespace at the end of the line before (#7).\n  // The  *only* reliable way to do that is to copy the *entire* rest of the\n  // textarea's content into the <span> created at the caret position.\n  // For inputs, just '.' would be enough, but no need to bother.\n  span.textContent = element.value.substring(position) || '.';  // || because a completely empty faux span doesn't render at all\n  div.appendChild(span);\n\n  var coordinates = {\n    top: span.offsetTop + parseInt(computed['borderTopWidth']),\n    left: span.offsetLeft + parseInt(computed['borderLeftWidth']),\n    height: parseInt(computed['lineHeight'])\n  };\n\n  if (debug) {\n    span.style.backgroundColor = '#aaa';\n  } else {\n    document.body.removeChild(div);\n  }\n\n  return coordinates;\n}\n\nif ( true && typeof module.exports != 'undefined') {\n  module.exports = getCaretCoordinates;\n} else if(isBrowser) {\n  window.getCaretCoordinates = getCaretCoordinates;\n}\n\n}());\n\n\n//# sourceURL=webpack://hanfor/./node_modules/textarea-caret/index.js?");

/***/ }),

/***/ "./node_modules/datatables.net-select-bs5/js/select.bootstrap5.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/datatables.net-select-bs5/js/select.bootstrap5.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var datatables_net_bs5__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! datatables.net-bs5 */ \"./node_modules/datatables.net-bs5/js/dataTables.bootstrap5.mjs\");\n/* harmony import */ var datatables_net_select__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! datatables.net-select */ \"./node_modules/datatables.net-select/js/dataTables.select.mjs\");\n/*! Bootstrap 5 styling wrapper for Select\n * © SpryMedia Ltd - datatables.net/license\n */\n\n\n\n\n\n// Allow reassignment of the $ variable\nlet $ = jquery__WEBPACK_IMPORTED_MODULE_0__;\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (datatables_net_bs5__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n\n\n//# sourceURL=webpack://hanfor/./node_modules/datatables.net-select-bs5/js/select.bootstrap5.mjs?");

/***/ }),

/***/ "./node_modules/undate/dist/index.mjs":
/*!********************************************!*\
  !*** ./node_modules/undate/dist/index.mjs ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   update: () => (/* binding */ update),\n/* harmony export */   wrapCursor: () => (/* binding */ wrapCursor)\n/* harmony export */ });\nfunction update(el, headToCursor, cursorToTail) {\r\n    const curr = el.value; // strA + strB1 + strC\r\n    const next = headToCursor + (cursorToTail || \"\"); // strA + strB2 + strC\r\n    const activeElement = document.activeElement;\r\n    //  Calculate length of strA and strC\r\n    let aLength = 0;\r\n    let cLength = 0;\r\n    while (aLength < curr.length && aLength < next.length && curr[aLength] === next[aLength]) {\r\n        aLength++;\r\n    }\r\n    while (curr.length - cLength - 1 >= 0 &&\r\n        next.length - cLength - 1 >= 0 &&\r\n        curr[curr.length - cLength - 1] === next[next.length - cLength - 1]) {\r\n        cLength++;\r\n    }\r\n    aLength = Math.min(aLength, Math.min(curr.length, next.length) - cLength);\r\n    // Select strB1\r\n    el.setSelectionRange(aLength, curr.length - cLength);\r\n    // Get strB2\r\n    const strB2 = next.substring(aLength, next.length - cLength);\r\n    // Replace strB1 with strB2\r\n    el.focus();\r\n    if (!document.execCommand(\"insertText\", false, strB2)) {\r\n        // Document.execCommand returns false if the command is not supported.\r\n        // Firefox and IE returns false in this case.\r\n        el.value = next;\r\n        // Dispatch input event. Note that `new Event(\"input\")` throws an error on IE11\r\n        const event = document.createEvent(\"Event\");\r\n        event.initEvent(\"input\", true, true);\r\n        el.dispatchEvent(event);\r\n    }\r\n    // Move cursor to the end of headToCursor\r\n    el.setSelectionRange(headToCursor.length, headToCursor.length);\r\n    activeElement.focus();\r\n    return el;\r\n}\n\nfunction wrapCursor(el, before, after) {\r\n    const initEnd = el.selectionEnd;\r\n    const headToCursor = el.value.substr(0, el.selectionStart) + before;\r\n    const cursorToTail = el.value.substring(el.selectionStart, initEnd) + (after || \"\") + el.value.substr(initEnd);\r\n    update(el, headToCursor, cursorToTail);\r\n    el.selectionEnd = initEnd + before.length;\r\n    return el;\r\n}\n\n\n//# sourceMappingURL=index.mjs.map\n\n\n//# sourceURL=webpack://hanfor/./node_modules/undate/dist/index.mjs?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"requirements": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkhanfor"] = self["webpackChunkhanfor"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["commons"], () => (__webpack_require__("./js/requirements.js")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;